{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://basetemplate/./src/apiFunctions.js","webpack://basetemplate/./node_modules/date-fns/toDate.mjs","webpack://basetemplate/./node_modules/date-fns/getHours.mjs","webpack://basetemplate/./node_modules/date-fns/fromUnixTime.mjs","webpack://basetemplate/./src/helperFunctions.js","webpack://basetemplate/./node_modules/date-fns/getDay.mjs","webpack://basetemplate/./node_modules/date-fns/getMinutes.mjs","webpack://basetemplate/./src/index.js","webpack://basetemplate/./src/builderFunctions.js"],"sourcesContent":["export function getCordinates(city) {\n    return fetch(\n      `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=2815b9b71f4c4387bd5d1f3c3f298af6`,\n      { mode: \"cors\" },\n    )\n      .then((res) => {\n        if (res.ok === false) {\n          throw new Error(\n            `getCordinates fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n          )\n        }\n        return res.json()\n      })\n      .then((res) => {\n        const { lat, lon, name } = res[0]\n        return { name, lat, lon }\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n  \nexport function getWeather(lat, lon, metric) {\n    return fetch(\n      `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=2815b9b71f4c4387bd5d1f3c3f298af6&units=${metric}`,\n      { mode: \"cors\" },\n    )\n      .then((res) => {\n        if (res.ok === false) {\n          throw new Error(\n            `getWeather fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n          )\n        }\n        return res.json()\n      })\n      .then((res) => {\n        return res\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\nexport function getWeatherIcon(iconCode) {\n    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`\n}","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport function getHours(date) {\n  const _date = toDate(date);\n  const hours = _date.getHours();\n  return hours;\n}\n\n// Fallback for modularized imports:\nexport default getHours;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import { fromUnixTime, getHours, getMinutes, getDay } from \"date-fns\"\n\nexport function convertPopToPercentage(unit) {\n    return Math.floor(unit * 100)\n}\n\nfunction convertMetersPerSecondToKhH(unit) {\n    return unit * 3.6\n}\n\nfunction convertMilesPerHourToKhH(unit) {\n  return unit * 1.609344\n}\n  \nexport function convertMetersToKilometers(unit) {\n    return unit / 100\n}\n\n\n\nexport function getHourFromUnixTimestamp(unix) {\n  return getHours(fromUnixTime(unix));\n}\n\nexport function handleCorrectMetric(unit) {\n  const selected = document.querySelector(\".selectedMetric\")\n\n  if(selected.classList.contains(\"metric-celsius\")) {\n    return convertMetersPerSecondToKhH(unit)\n  } \n\n  return convertMilesPerHourToKhH(unit)\n}\n\nexport function getDayFromUnixTimestamp(unix) {\n    const day = getDay(fromUnixTime(unix))\n  \n    if(day === 0) {\n      return \"Sunday\"\n    } \n  \n    if(day === 1) {\n      return \"Monday\"\n    }\n  \n    if(day === 2) {\n      return \"Tuesday\"\n    }\n    \n    if(day === 3) {\n      return \"Wednesday\"\n    }\n  \n    if(day === 4) {\n      return \"Thursday\"\n    }\n  \n    if(day === 5) {\n      return \"Friday\"\n    }\n  \n    if(day === 6) {\n      return \"Saturday\"\n    }\n\n    return undefined\n}\n\nexport function getHoursAndMinutes(unit) {\n    const date = fromUnixTime(unit)\n    const hours = getHours(date)\n    let minutes = getMinutes(date)\n\n    if(minutes.toString(10).length === 1) {\n        minutes = `0${minutes}`\n    }\n\n    return `${hours} : ${minutes}`\n}\n\nexport function roundUp(unit) {\n    return Math.round(unit)\n}\n\nexport function findCompassDirection(deg) {\n    const directionsArr = [{directionName: \"N\", degrees: 0}, {directionName: \"NNE\", degrees: 22.5}, {directionName: \"NE\", degrees: 45}, {directionName: \"ENE\", degrees: 67.5}, {directionName: \"E\", degrees: 90}, {directionName: \"ESE\", degrees: 112.5}, {directionName: \"SE\", degrees: 135}, {directionName: \"SSE\", degrees: 157.5}, {directionName: \"S\", degrees: 180}, {directionName: \"SSW\", degrees: 202.5}, {directionName: \"SW\", degrees: 225}, {directionName: \"WSW\", degrees: 247.5}, {directionName: \"W\", degrees: 270}, {directionName: \"WNW\", degrees: 292.5}, {directionName: \"NW\", degrees: 315}, {directionName: \"NNW\", degrees: 337.5}, {directionName: \"N\", degrees: 360} ]\n  \n  \n    for(let i = 0; i < directionsArr.length; i += 1) {\n      if(directionsArr[i].degrees === deg) {\n        return directionsArr[i].directionName\n      } \n  \n      if(directionsArr[i].degrees > deg) {\n        const prevMinusDeg = deg - directionsArr[i - 1].degrees \n        const currMinusDeg = directionsArr[i].degrees - deg\n  \n        if(prevMinusDeg < currMinusDeg) {\n          return directionsArr[i - 1].directionName\n        } \n\n        return directionsArr[i].directionName\n        \n      }\n    }\n\n    return undefined\n  }\n\nexport function clearContentWrapper() {\n  const content = document.querySelector(\".weather-content-wrapper\")    \n  \n  if(content) {\n    content.remove()\n  }\n}\n\n\nexport const mediaQueryMin768 = window.matchMedia('(min-width: 768px')\n\nexport function handleMediaQueryMin768(event) {\n  const generalInfoContainer = document.querySelector(\".generalInfo-container\")\n  const dailyForecastContainer = document.querySelector(\".dailyForecastContainer\")\n  const contentWrapper = document.querySelector(\".weather-content-wrapper\")\n\n  if(event.matches) {\n    generalInfoContainer.remove()\n    contentWrapper.insertBefore(generalInfoContainer, dailyForecastContainer)\n  } else {\n    generalInfoContainer.remove()\n    contentWrapper.appendChild(generalInfoContainer)\n  }\n}\n\nmediaQueryMin768.addEventListener('change', handleMediaQueryMin768)\n\nexport function appendToMainDisplay(element) {\n  document.querySelector(\".l-mainDisplay\").appendChild(element);\n}\n\nexport function appendToContentWrapper(element) {\n  document.querySelector(\".weather-content-wrapper\").appendChild(element);\n}\n\n  \n\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date) {\n  const _date = toDate(date);\n  const day = _date.getDay();\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nexport function getMinutes(date) {\n  const _date = toDate(date);\n  const minutes = _date.getMinutes();\n  return minutes;\n}\n\n// Fallback for modularized imports:\nexport default getMinutes;\n","import { getCordinates, getWeather } from \"./apiFunctions\"\nimport { createMainDisplay, createMainInfo, createHourlyForecast, createDescription, createDailyForecast, createGeneralInfo } from \"./builderFunctions\"\nimport { clearContentWrapper, mediaQueryMin768, handleMediaQueryMin768 } from \"./helperFunctions\"\n\nconst main = document.querySelector(\"main\")\n\nasync function handleCitySearch(city) {\n  clearContentWrapper()\n\n  const weatherContentWrapper = document.createElement(\"div\")\n  weatherContentWrapper.classList.add(\"weather-content-wrapper\")\n  main.appendChild(weatherContentWrapper)\n\n  const coordinatesObj = await getCordinates(city)\n  const { lat , lon } = coordinatesObj\n\n  const selectedMetric = document.querySelector(\".selectedMetric\")\n  \n  let metricForApi;\n\n  if(selectedMetric.classList.contains(\"metric-celsius\")) {\n    metricForApi = \"metric\"\n  }\n\n  if(selectedMetric.classList.contains(\"metric-fahrenheit\")) {\n    metricForApi = \"imperial\"\n  }\n\n  const weatherObj = await getWeather(lat, lon, metricForApi)\n\n  createMainDisplay()\n  createMainInfo(coordinatesObj, weatherObj)\n  createHourlyForecast(weatherObj)\n  createDescription(weatherObj.daily[0])\n  createDailyForecast(weatherObj.daily)\n  createGeneralInfo(weatherObj)\n\n  handleMediaQueryMin768(mediaQueryMin768)\n}\n\nconst toggleMetricBtn = document.querySelector(\".toggleMetric\")\n\ntoggleMetricBtn.addEventListener(\"click\", () => {\n  const celsiusMetric = document.querySelector(\".metric-celsius\")\n  const fahrenheitMetric = document.querySelector(\".metric-fahrenheit\")\n\n  if(celsiusMetric.classList.contains(\"selectedMetric\")) {\n    celsiusMetric.classList.remove(\"selectedMetric\")\n    fahrenheitMetric.classList.add(\"selectedMetric\")\n\n  } else {\n    celsiusMetric.classList.add(\"selectedMetric\")\n    fahrenheitMetric.classList.remove(\"selectedMetric\")\n  }\n\n  if(document.querySelector(\".weather-content-wrapper\")) {\n    const city = document.querySelector(\".city\").textContent\n\n    handleCitySearch(city);\n  }\n\n})\n\nconst searchBtn = document.querySelector(\".search-btn\")\n\nsearchBtn.addEventListener(\"click\", (e) => {\n  const searchValue = document.querySelector(\".search-input\").value\n  const searchInput = document.querySelector(\".search-input\")\n  searchInput.value = \"\"\n\n  handleCitySearch(searchValue)\n  e.preventDefault()\n})\n\n","import { getWeatherIcon } from \"./apiFunctions\"\nimport { roundUp, convertMetersToKilometers, convertPopToPercentage, handleCorrectMetric, getDayFromUnixTimestamp, getHourFromUnixTimestamp, getHoursAndMinutes, findCompassDirection, appendToMainDisplay, appendToContentWrapper } from \"./helperFunctions\"\n\nexport function createMainDisplay() {\n  const mainDisplay = document.createElement(\"div\")\n  mainDisplay.classList.add(\"l-mainDisplay\")\n\n  const contentWrapper = document.querySelector(\".weather-content-wrapper\")\n  contentWrapper.appendChild(mainDisplay)\n}\n\nexport function createMainInfo(cityCoordinates, weatherObj) {\n    const mainInfo = document.createElement(\"div\")\n    mainInfo.classList.add(\"mainInfo\")\n\n    const { name: cityName } = cityCoordinates\n\n    const city = document.createElement(\"div\")\n    city.textContent = `${cityName}`\n    city.classList.add(\"city\")\n\n    const { main } = weatherObj.current.weather[0]\n\n    const cityWeather = document.createElement(\"div\")\n    cityWeather.textContent = `${main}`\n    cityWeather.classList.add(\"city-weather\")\n\n    const { temp } = weatherObj.current\n\n    const cityTemp = document.createElement(\"div\")\n    cityTemp.textContent = `${roundUp(temp)}°`\n    cityTemp.classList.add(\"city-temperature\")\n\n    const { min, max } = weatherObj.daily[0].temp\n\n    const cityHighAndLowContainer = document.createElement(\"div\")\n    const cityHigh = document.createElement(\"div\")\n    const cityLow = document.createElement(\"div\")\n\n\n    cityHigh.textContent = `H:${roundUp(max)}°`\n    cityLow.textContent = `L:${roundUp(min)}°`\n\n    cityHigh.classList.add(\"city-highAndLowTemp-high\")\n    cityLow.classList.add(\"city-highAndLowTemp-low\")\n    cityHighAndLowContainer.classList.add(\"city-highAndLowTemp\")\n\n    cityHighAndLowContainer.append(cityHigh, cityLow)\n\n    mainInfo.append(city, cityWeather, cityTemp, cityHighAndLowContainer)\n\n    appendToMainDisplay(mainInfo)\n}\n\nexport function createHourlyForecast(weatherObj) {\n    const arr24Hours = weatherObj.hourly.slice(0, 24)\n\n    const hourlyForecastContainer = document.createElement(\"div\")\n    hourlyForecastContainer.classList.add(\"hourlyForecastContainer\")\n  \n    for (let i = 0; i < arr24Hours.length; i += 1) {\n      const hourlyForecast = document.createElement(\"div\")\n      const hour = document.createElement(\"div\")\n      const rainChance = document.createElement(\"div\")\n      const weatherImage = new Image()\n      const temperature = document.createElement(\"div\")\n  \n  \n      hourlyForecast.classList.add(\"hourlyForecast\")\n      hour.classList.add(\"hourlyForecast-hour\")\n      rainChance.classList.add(\"hourlyForecast-rainChance\")\n      weatherImage.classList.add(\"hourlyForecast-weatherImage\")\n      temperature.classList.add(\"hourlyForecast-temperature\")\n  \n      if (i === 0) {\n        hour.textContent = \"Now\"\n      } else {\n        hour.textContent = `${getHourFromUnixTimestamp(arr24Hours[i].dt)}`\n      }\n  \n      if (arr24Hours[i].pop !== 0) {\n        rainChance.textContent = `${convertPopToPercentage(arr24Hours[i].pop)}%`\n      }\n  \n      weatherImage.src = getWeatherIcon(arr24Hours[i].weather[0].icon)\n  \n      temperature.textContent = `${roundUp(arr24Hours[i].temp)}°`\n  \n      hourlyForecast.append(hour, rainChance, weatherImage, temperature)\n      hourlyForecastContainer.appendChild(hourlyForecast)\n      }\n\n      appendToMainDisplay(hourlyForecastContainer)\n}\n\nexport function createDescription(weatherObj) {\n    const { max , min } = weatherObj.temp\n    const descriptionValue = weatherObj.weather[0].description\n  \n    const description = document.createElement(\"div\")\n    const descriptionParagraph = document.createElement(\"p\")\n  \n    description.classList.add(\"todaysDescription\")\n    descriptionParagraph.classList.add(\"todaysDescription-paragraph\")\n  \n    descriptionParagraph.textContent = `Today: ${descriptionValue}. The high will be ${roundUp(max)}°. The low will be ${roundUp(min)}°.`\n  \n    description.appendChild(descriptionParagraph)\n\n    appendToMainDisplay(description)\n}\n\nexport function createDailyForecast(dailyForecastArr) {\n    const dailyForecastContainer = document.createElement(\"div\")\n  \n    dailyForecastContainer.classList.add(\"dailyForecastContainer\")\n  \n    for(let i = 1; i < dailyForecastArr.length; i += 1) {\n      const dailyForecast = document.createElement(\"div\")\n  \n      const day = document.createElement(\"div\")\n      const weatherIcon = new Image()\n      const highAndLowContainer = document.createElement(\"div\")\n      const high = document.createElement(\"span\")\n      const low = document.createElement(\"span\")\n      \n      dailyForecast.classList.add(\"dailyForecast\")\n  \n      day.classList.add(\"dailyForecast-day\")\n      weatherIcon.classList.add(\"dailyForecast-weatherImage\")\n      highAndLowContainer.classList.add(\"dailyForecast-highAndLowContainer\")\n      high.classList.add(\"dailyForecast-highAndLowContainer-high\")\n      low.classList.add(\"dailyForecast-highAndLowContainer-low\")\n  \n      day.textContent = `${getDayFromUnixTimestamp(dailyForecastArr[i].dt)}`\n      weatherIcon.src = getWeatherIcon(dailyForecastArr[i].weather[0].icon)\n      high.textContent = `${roundUp(dailyForecastArr[i].temp.max)}°`\n      low.textContent = `${roundUp(dailyForecastArr[i].temp.min)}°`\n  \n      highAndLowContainer.appendChild(high)\n      highAndLowContainer.appendChild(low)\n  \n      dailyForecast.appendChild(day)\n      dailyForecast.appendChild(weatherIcon)\n      dailyForecast.appendChild(highAndLowContainer)\n  \n      dailyForecastContainer.appendChild(dailyForecast)\n    }\n    \n    appendToContentWrapper(dailyForecastContainer)\n}\n\n\n\nexport function createGeneralInfo(weatherObj) {\n    const generalInfoContainer = document.createElement(\"div\")\n  \n    generalInfoContainer.classList.add(\"generalInfo-container\")\n  \n    const { sunrise, sunset } = weatherObj.daily[0]\n  \n    const sunriseContainer = document.createElement(\"div\")\n    const sunriseTitle = document.createElement(\"div\")\n    const sunriseValue = document.createElement(\"div\")\n  \n    sunriseTitle.textContent = \"SUNRISE\"\n    sunriseValue.textContent = `${getHoursAndMinutes(sunrise)}`\n  \n    const sunsetContainer = document.createElement(\"div\")\n    const sunsetTitle = document.createElement(\"div\")\n    const sunsetValue = document.createElement(\"div\")\n  \n    sunsetTitle.textContent = \"SUNSET\"\n    sunsetValue.textContent = `${getHoursAndMinutes(sunset)}`\n  \n    sunriseTitle.classList.add(\"generalInfo-title\")\n    sunriseValue.classList.add(\"generalInfo-value\")\n  \n    sunsetTitle.classList.add(\"generalInfo-title\")\n    sunsetValue.classList.add(\"generalInfo-value\")\n  \n    sunriseContainer.classList.add(\"generalInfo\")\n    sunsetContainer.classList.add(\"generalInfo\")\n  \n    sunriseContainer.append(sunriseTitle, sunriseValue)\n    sunsetContainer.append(sunsetTitle, sunsetValue)\n  \n    const { pop } = weatherObj.hourly[0]\n  \n    const chanceOfRainContainer = document.createElement(\"div\")\n    const chanceOfRainTitle = document.createElement(\"div\")\n    const chanceOfRainValue = document.createElement(\"div\")\n  \n    chanceOfRainTitle.textContent = \"CHANCE OF RAIN\"\n    chanceOfRainValue.textContent = `${convertPopToPercentage(pop)}%`\n  \n    chanceOfRainTitle.classList.add(\"generalInfo-title\")\n    chanceOfRainValue.classList.add(\"generalInfo-value\")\n  \n    chanceOfRainContainer.classList.add(\"generalInfo\")\n  \n    chanceOfRainContainer.append(chanceOfRainTitle, chanceOfRainValue)\n  \n    const { humidity } = weatherObj.hourly[0]\n  \n    const humidityContainer = document.createElement(\"div\")\n    const humidityTitle = document.createElement(\"div\")\n    const humidityValue = document.createElement(\"div\")\n  \n    humidityTitle.textContent = \"HUMIDITY\"\n    humidityValue.textContent = `${humidity}%`\n  \n    humidityTitle.classList.add(\"generalInfo-title\")\n    humidityValue.classList.add(\"generalInfo-value\")\n  \n    humidityContainer.classList.add(\"generalInfo\")\n  \n    humidityContainer.append(humidityTitle, humidityValue)\n  \n    const { wind_speed:windSpeed, wind_deg:windDeg } = weatherObj.hourly[0]\n  \n    const windContainer = document.createElement(\"div\")\n    const windTitle = document.createElement(\"div\")\n    const windValue = document.createElement(\"div\")\n  \n    windTitle.textContent = \"WIND\"\n\n    const compassDirection = findCompassDirection(windDeg)\n\n    windValue.textContent = `${(compassDirection)} ${roundUp(handleCorrectMetric(windSpeed))} km/hr`\n  \n    windTitle.classList.add(\"generalInfo-title\")\n    windValue.classList.add(\"generalInfo-value\")\n  \n    windContainer.classList.add(\"generalInfo\")\n  \n    windContainer.append(windTitle, windValue)\n  \n    const { feels_like:feelsLike } = weatherObj.hourly[0]\n  \n    const feelsLikeContainer = document.createElement(\"div\")\n    const feelsLikeTitle = document.createElement(\"div\")\n    const feelsLikeValue = document.createElement(\"div\")\n  \n    feelsLikeTitle.textContent = \"FEELS LIKE\"\n    feelsLikeValue.textContent = `${roundUp(feelsLike)}°`\n  \n    feelsLikeTitle.classList.add(\"generalInfo-title\")\n    feelsLikeValue.classList.add(\"generalInfo-value\")\n  \n    feelsLikeContainer.classList.add(\"generalInfo\")\n  \n    feelsLikeContainer.append(feelsLikeTitle, feelsLikeValue)\n  \n    const { rain } = weatherObj.daily[0]\n  \n    const precipitationContainer = document.createElement(\"div\")\n    const precipitationTitle = document.createElement(\"div\")\n    const precipitationValue = document.createElement(\"div\")\n  \n    precipitationTitle.textContent = \"PRECIPITATION\"\n    precipitationValue.textContent = `${rain} mm/h`\n  \n    if(rain === undefined) {\n      precipitationValue.textContent = 0;\n    }\n  \n    precipitationTitle.classList.add(\"generalInfo-title\")\n    precipitationValue.classList.add(\"generalInfo-value\")\n  \n    precipitationContainer.classList.add(\"generalInfo\")\n  \n    precipitationContainer.append(precipitationTitle, precipitationValue)\n  \n    const { pressure } = weatherObj.hourly[0]\n  \n    const pressureContainer = document.createElement(\"div\")\n    const pressureTitle = document.createElement(\"div\")\n    const pressureValue = document.createElement(\"div\")\n  \n    pressureTitle.textContent = \"PRESSURE\"\n    pressureValue.textContent = `${pressure} hPa`\n  \n    pressureTitle.classList.add(\"generalInfo-title\")\n    pressureValue.classList.add(\"generalInfo-value\")\n  \n    pressureContainer.classList.add(\"generalInfo\")\n  \n    pressureContainer.append(pressureTitle, pressureValue)\n  \n    const { visibility } = weatherObj.hourly[0]\n  \n    const visibilityContainer = document.createElement(\"div\")\n    const visibilityTitle = document.createElement(\"div\")\n    const visibilityValue = document.createElement(\"div\")\n  \n    visibilityTitle.textContent = \"VISIBILITY\"\n    visibilityValue.textContent = `${convertMetersToKilometers(visibility)} km`\n  \n    visibilityTitle.classList.add(\"generalInfo-title\")\n    visibilityValue.classList.add(\"generalInfo-value\")\n  \n    visibilityContainer.classList.add(\"generalInfo\")\n  \n    visibilityContainer.append(visibilityTitle, visibilityValue)\n  \n    const { uvi } = weatherObj.hourly[0]\n  \n    const uviIndexContainer = document.createElement(\"div\")\n    const uviIndexTitle = document.createElement(\"div\")\n    const uviIndexValue = document.createElement(\"div\")\n  \n    uviIndexTitle.textContent = \"UVI INDEX\" \n    uviIndexValue.textContent = `${uvi}`\n  \n    uviIndexTitle.classList.add(\"generalInfo-title\")\n    uviIndexValue.classList.add(\"generalInfo-value\")\n  \n    uviIndexContainer.classList.add(\"generalInfo\")\n  \n    uviIndexContainer.append(uviIndexTitle, uviIndexValue)\n  \n    generalInfoContainer.append(sunriseContainer, sunsetContainer, chanceOfRainContainer, humidityContainer, windContainer, pressureContainer, feelsLikeContainer, precipitationContainer, precipitationContainer, visibilityContainer, uviIndexContainer)\n    \n    appendToContentWrapper(generalInfoContainer)\n  }"],"names":["getWeatherIcon","iconCode","toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","getHours","date","fromUnixTime","unixTime","convertPopToPercentage","unit","Math","floor","getDayFromUnixTimestamp","unix","day","getDay","getHoursAndMinutes","hours","minutes","getMinutes","length","roundUp","round","mediaQueryMin768","window","matchMedia","handleMediaQueryMin768","event","generalInfoContainer","document","querySelector","dailyForecastContainer","contentWrapper","matches","remove","insertBefore","appendChild","appendToMainDisplay","element","appendToContentWrapper","addEventListener","main","async","handleCitySearch","city","content","clearContentWrapper","weatherContentWrapper","createElement","classList","add","coordinatesObj","fetch","mode","then","res","ok","Error","status","statusText","json","lat","lon","name","catch","err","console","error","getCordinates","selectedMetric","metricForApi","contains","weatherObj","metric","getWeather","mainDisplay","createMainDisplay","cityCoordinates","mainInfo","cityName","textContent","current","weather","cityWeather","temp","cityTemp","min","max","daily","cityHighAndLowContainer","cityHigh","cityLow","append","createMainInfo","arr24Hours","hourly","slice","hourlyForecastContainer","i","hourlyForecast","hour","rainChance","weatherImage","Image","temperature","dt","pop","src","icon","createHourlyForecast","descriptionValue","description","descriptionParagraph","createDescription","dailyForecastArr","dailyForecast","weatherIcon","highAndLowContainer","high","low","createDailyForecast","sunrise","sunset","sunriseContainer","sunriseTitle","sunriseValue","sunsetContainer","sunsetTitle","sunsetValue","chanceOfRainContainer","chanceOfRainTitle","chanceOfRainValue","humidity","humidityContainer","humidityTitle","humidityValue","wind_speed","windSpeed","wind_deg","windDeg","windContainer","windTitle","windValue","compassDirection","deg","directionsArr","directionName","degrees","findCompassDirection","convertMetersPerSecondToKhH","convertMilesPerHourToKhH","feels_like","feelsLike","feelsLikeContainer","feelsLikeTitle","feelsLikeValue","rain","precipitationContainer","precipitationTitle","precipitationValue","undefined","pressure","pressureContainer","pressureTitle","pressureValue","visibility","visibilityContainer","visibilityTitle","visibilityValue","convertMetersToKilometers","uvi","uviIndexContainer","uviIndexTitle","uviIndexValue","createGeneralInfo","celsiusMetric","fahrenheitMetric","e","searchValue","value","preventDefault"],"sourceRoot":""}