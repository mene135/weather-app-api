{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://basetemplate/./node_modules/date-fns/toDate.mjs","webpack://basetemplate/./node_modules/date-fns/getHours.mjs","webpack://basetemplate/./node_modules/date-fns/fromUnixTime.mjs","webpack://basetemplate/./src/helperFunctions.js","webpack://basetemplate/./node_modules/date-fns/getDay.mjs","webpack://basetemplate/./node_modules/date-fns/getMinutes.mjs","webpack://basetemplate/./src/handlers.js","webpack://basetemplate/./src/apiFunctions.js","webpack://basetemplate/./src/index.js","webpack://basetemplate/./src/builderFunctions.js"],"sourcesContent":["/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport function getHours(date) {\n  const _date = toDate(date);\n  const hours = _date.getHours();\n  return hours;\n}\n\n// Fallback for modularized imports:\nexport default getHours;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import { fromUnixTime, getHours, getMinutes, getDay } from \"date-fns\"\r\n\r\nexport function convertPopToPercentage(unit) {\r\n  return Math.floor(unit * 100)\r\n}\r\n\r\nexport function convertMetersPerSecondToKhH(unit) {\r\n  return unit * 3.6\r\n}\r\n\r\nexport function convertMilesPerHourToKhH(unit) {\r\n  return unit * 1.609344\r\n}\r\n\r\nexport function convertMetersToKilometers(unit) {\r\n  return unit / 100\r\n}\r\n\r\nexport function getHourFromUnixTimestamp(unix) {\r\n  return getHours(fromUnixTime(unix))\r\n}\r\n\r\nexport function getDayFromUnixTimestamp(unix) {\r\n  const day = getDay(fromUnixTime(unix))\r\n\r\n  if (day === 0) {\r\n    return \"Sunday\"\r\n  }\r\n\r\n  if (day === 1) {\r\n    return \"Monday\"\r\n  }\r\n\r\n  if (day === 2) {\r\n    return \"Tuesday\"\r\n  }\r\n\r\n  if (day === 3) {\r\n    return \"Wednesday\"\r\n  }\r\n\r\n  if (day === 4) {\r\n    return \"Thursday\"\r\n  }\r\n\r\n  if (day === 5) {\r\n    return \"Friday\"\r\n  }\r\n\r\n  if (day === 6) {\r\n    return \"Saturday\"\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport function getHoursAndMinutes(unit) {\r\n  const date = fromUnixTime(unit)\r\n  const hours = getHours(date)\r\n  let minutes = getMinutes(date)\r\n\r\n  // check if the lenght of the minutes is 1 if so it prepends a 0 to avoid confusion example: instead of 20:4 its 20:04\r\n  if (minutes.toString(10).length === 1) {\r\n    minutes = `0${minutes}`\r\n  }\r\n\r\n  return `${hours} : ${minutes}`\r\n}\r\n\r\nexport function roundUp(unit) {\r\n  return Math.round(unit)\r\n}\r\n\r\nexport function findWindDirection(deg) {\r\n  const directionsArr = [\r\n    { directionName: \"N\", degrees: 0 },\r\n    { directionName: \"NNE\", degrees: 22.5 },\r\n    { directionName: \"NE\", degrees: 45 },\r\n    { directionName: \"ENE\", degrees: 67.5 },\r\n    { directionName: \"E\", degrees: 90 },\r\n    { directionName: \"ESE\", degrees: 112.5 },\r\n    { directionName: \"SE\", degrees: 135 },\r\n    { directionName: \"SSE\", degrees: 157.5 },\r\n    { directionName: \"S\", degrees: 180 },\r\n    { directionName: \"SSW\", degrees: 202.5 },\r\n    { directionName: \"SW\", degrees: 225 },\r\n    { directionName: \"WSW\", degrees: 247.5 },\r\n    { directionName: \"W\", degrees: 270 },\r\n    { directionName: \"WNW\", degrees: 292.5 },\r\n    { directionName: \"NW\", degrees: 315 },\r\n    { directionName: \"NNW\", degrees: 337.5 },\r\n    { directionName: \"N\", degrees: 360 },\r\n  ]\r\n\r\n  for (let i = 0; i < directionsArr.length; i += 1) {\r\n    // Checks if the degrees directly match the an directionName\r\n    if (directionsArr[i].degrees === deg) {\r\n      return directionsArr[i].directionName\r\n    }\r\n\r\n    // Checks if the degree in the arr are more that the degree parameter if so it compares the current elemnt with the previous to find which one is closer\r\n    if (directionsArr[i].degrees > deg) {\r\n      const prevMinusDeg = deg - directionsArr[i - 1].degrees\r\n      const currMinusDeg = directionsArr[i].degrees - deg\r\n\r\n      if (prevMinusDeg < currMinusDeg) {\r\n        return directionsArr[i - 1].directionName\r\n      }\r\n\r\n      return directionsArr[i].directionName\r\n    }\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport function clearContentWrapper() {\r\n  const content = document.querySelector(\".weather-content-wrapper\")\r\n\r\n  if (content) {\r\n    content.remove()\r\n  }\r\n}\r\n\r\nexport function appendToMainDisplay(element) {\r\n  document.querySelector(\".l-mainDisplay\").appendChild(element)\r\n}\r\n\r\nexport function appendToContentWrapper(element) {\r\n  document.querySelector(\".weather-content-wrapper\").appendChild(element)\r\n}\r\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date) {\n  const _date = toDate(date);\n  const day = _date.getDay();\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nexport function getMinutes(date) {\n  const _date = toDate(date);\n  const minutes = _date.getMinutes();\n  return minutes;\n}\n\n// Fallback for modularized imports:\nexport default getMinutes;\n","import { convertMetersPerSecondToKhH, convertMilesPerHourToKhH } from \"./helperFunctions\"\r\n\r\nexport function handleSearchError(err) {\r\n  document.querySelector(\".toast-message\").textContent = `${err}`\r\n  document.querySelector(\".toast\").classList.remove(\"toast-isHidden\")\r\n}\r\n\r\nexport function handleMediaQueryMin768(event) {\r\n  // Handles the allocation of the general info section while also checking if it exists.\r\n  const generalInfoSection = document.querySelector(\".generalInfoSection\")\r\n  const dailyForecastSection = document.querySelector(\".dailyForecastSection\")\r\n  const contentWrapper = document.querySelector(\".weather-content-wrapper\")\r\n\r\n  if (event.matches && generalInfoSection) {\r\n    generalInfoSection.remove()\r\n    contentWrapper.insertBefore(generalInfoSection, dailyForecastSection)\r\n  } else if (generalInfoSection) {\r\n    generalInfoSection.remove()\r\n    contentWrapper.appendChild(generalInfoSection)\r\n  }\r\n}\r\n\r\nexport const mediaQueryMin768 = window.matchMedia(\"(min-width: 768px\")\r\n\r\nexport function handleCorrectMetric(windSpeed) {\r\n  const selected = document.querySelector(\".selectedMetric\")\r\n\r\n  /* If selected metric is celsius wind speed provided by the Api will be in meters per second, if metric selected is fahrenheit it will be provided in miles per hour. */\r\n  if (selected.classList.contains(\"metric-celsius\")) {\r\n    return convertMetersPerSecondToKhH(windSpeed)\r\n  }\r\n\r\n  return convertMilesPerHourToKhH(windSpeed)\r\n}\r\n\r\n\r\n","export function getCordinates(city) {\r\n  return fetch(\r\n    `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=2815b9b71f4c4387bd5d1f3c3f298af6`,\r\n    { mode: \"cors\" },\r\n  )\r\n    .then((res) => {\r\n      if (res.ok === false) {\r\n        throw new Error(\r\n         \"Operation unsuccessful\"\r\n        )\r\n      }\r\n      return res.json()\r\n    })\r\n    .then((res) => {\r\n\r\n      if(res.length === 0) {\r\n        throw new Error(\r\n          'City not found'\r\n        )\r\n      }\r\n\r\n      const {lat, lon, name } = res[0];\r\n\r\n      return { name, lat, lon }\r\n    }) \r\n    .catch((err) => {\r\n      if(err.message === \"Failed to fetch\") {\r\n        throw new Error (\r\n          'Network error'\r\n        )\r\n      }\r\n      throw err\r\n    })\r\n}\r\n\r\nexport function getWeather(lat, lon, metric) {\r\n  // Api call with latitude and longitude values to find the city and also a metric value to get either celsius or fahrenheit units, as well as different metrics for wind speed (meters/second) for metric value and (miles/hour) for the imperial value in the metric parameter.\r\n  return fetch(\r\n    `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=2815b9b71f4c4387bd5d1f3c3f298af6&units=${metric}`,\r\n    { mode: \"cors\" },\r\n  )\r\n    .then((res) => {\r\n      if (res.ok === false) {\r\n        throw new Error(\r\n          `getWeather fetch operation unsuccessful: ${res.status} ${res.statusText}`,\r\n        )\r\n      }\r\n      return res.json()\r\n    })\r\n    .then((res) => res)\r\n    .catch((err) => {\r\n      console.error(err)\r\n    })\r\n}\r\n\r\nexport function handleWeatherIcon(weatherImage, iconCode, iconDescription) {\r\n  const image = weatherImage\r\n\r\n  image.src = `https://openweathermap.org/img/wn/${iconCode}@2x.png`\r\n  image.setAttribute(\"alt\", `${iconDescription}`)\r\n  image.setAttribute(\"title\", `${iconDescription}`)\r\n\r\n}\r\n","import {\r\n  handleMediaQueryMin768,\r\n  mediaQueryMin768,\r\n} from \"./handlers\"\r\nimport {\r\n  clearContentWrapper\r\n} from \"./helperFunctions\"\r\nimport { getCordinates, getWeather } from \"./apiFunctions\"\r\nimport {\r\n  createMainDisplay,\r\n  createMainInfo,\r\n  createHourlyForecast,\r\n  createDescription,\r\n  createDailyForecast,\r\n  createGeneralInfo,\r\n} from \"./builderFunctions\"\r\n\r\n\r\nasync function searchManager(city) {\r\n  // Clears existing content, shows a loader component, and then hides the toast if it is displayed from a previous search.\r\n  clearContentWrapper()\r\n  document.querySelector(\".loader\").classList.remove(\"loader-isHidden\")\r\n  document.querySelector(\".toast\").classList.add(\"toast-isHidden\")\r\n\r\n  /* A wrapper that will wrap all of yhr data provided from the Api */\r\n  const weatherContentWrapper = document.createElement(\"div\")\r\n  weatherContentWrapper.classList.add(\"weather-content-wrapper\")\r\n\r\n  document.querySelector(\"main\").appendChild(weatherContentWrapper)\r\n\r\n  let coordinatesObj\r\n\r\n  try {\r\n    /* extracts latitude and longitude from an Api to be used for the api that provides us weather data */\r\n    coordinatesObj = await getCordinates(city)\r\n  } catch (err) {\r\n    document.querySelector(\".loader\").classList.add(\"loader-isHidden\")\r\n    searchManager(err)\r\n    return\r\n  }\r\n\r\n  const { lat, lon } = coordinatesObj\r\n\r\n  const selectedMetric = document.querySelector(\".selectedMetric\")\r\n\r\n  let metricForApi\r\n\r\n  // `metricForApi` determines the unit system for the API query string:\r\n  // - 'metric' for Celsius units\r\n  // - 'imperial' for Fahrenheit units\r\n\r\n\r\n  if (selectedMetric.classList.contains(\"metric-celsius\")) {\r\n    metricForApi = \"metric\"\r\n  }\r\n\r\n  if (selectedMetric.classList.contains(\"metric-fahrenheit\")) {\r\n    metricForApi = \"imperial\"\r\n  }\r\n\r\n  const weatherObj = await getWeather(lat, lon, metricForApi)\r\n\r\n  document.querySelector(\".loader\").classList.add(\"loader-isHidden\")\r\n\r\n  createMainDisplay()\r\n  createMainInfo(coordinatesObj, weatherObj)\r\n  createHourlyForecast(weatherObj)\r\n  createDescription(weatherObj.daily[0])\r\n  createDailyForecast(weatherObj.daily)\r\n  createGeneralInfo(weatherObj)\r\n\r\n  // Handles where general section should be \r\n  handleMediaQueryMin768(mediaQueryMin768)\r\n}\r\n\r\nconst toggleMetricBtn = document.querySelector(\".toggleMetric\")\r\n\r\ntoggleMetricBtn.addEventListener(\"click\", () => {\r\n  const celsiusMetric = document.querySelector(\".metric-celsius\")\r\n  const fahrenheitMetric = document.querySelector(\".metric-fahrenheit\")\r\n\r\n  if (celsiusMetric.classList.contains(\"selectedMetric\")) {\r\n    celsiusMetric.classList.remove(\"selectedMetric\")\r\n    fahrenheitMetric.classList.add(\"selectedMetric\")\r\n    toggleMetricBtn.setAttribute(\r\n      \"aria-label\",\r\n      \"Toggle metric used, currently selected metric is fahrenheit, other option is celsius\",\r\n    )\r\n  } else {\r\n    celsiusMetric.classList.add(\"selectedMetric\")\r\n    fahrenheitMetric.classList.remove(\"selectedMetric\")\r\n    toggleMetricBtn.setAttribute(\r\n      \"aria-label\",\r\n      \"Toggle metric used, currently selected metric is celsius, other option is fahrenheit\",\r\n    )\r\n  }\r\n\r\n  if (document.querySelector(\".weather-content-wrapper\")) {\r\n    const city = document.querySelector(\".city\").textContent\r\n\r\n    searchManager(city)\r\n  }\r\n})\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\")\r\n\r\nsearchBtn.addEventListener(\"click\", (e) => {\r\n  e.preventDefault()\r\n\r\n  const searchValue = document.querySelector(\".search-input\").value\r\n  if (searchValue === \"\") {\r\n    return\r\n  }\r\n\r\n  const searchInput = document.querySelector(\".search-input\")\r\n  searchInput.value = \"\"\r\n\r\n  searchManager(searchValue)\r\n})\r\n\r\nmediaQueryMin768.addEventListener(\"change\", handleMediaQueryMin768)\r\n\r\n\r\n\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  searchManager(\"London\")\r\n})\r\n","import { handleWeatherIcon } from \"./apiFunctions\"\r\nimport {\r\n  roundUp,\r\n  convertMetersToKilometers,\r\n  convertPopToPercentage,\r\n  getDayFromUnixTimestamp,\r\n  getHourFromUnixTimestamp,\r\n  getHoursAndMinutes,\r\n  findWindDirection,\r\n  appendToMainDisplay,\r\n  appendToContentWrapper,\r\n} from \"./helperFunctions\"\r\nimport {\r\n  handleCorrectMetric\r\n} from \"./handlers\"\r\n\r\nexport function createMainDisplay() {\r\n  const mainDisplay = document.createElement(\"div\")\r\n  mainDisplay.classList.add(\"l-mainDisplay\")\r\n\r\n  document.querySelector(\".weather-content-wrapper\").appendChild(mainDisplay)\r\n}\r\n\r\nexport function createMainInfo(cityCoordinates, weatherObj) {\r\n  const mainInfoSection = document.createElement(\"section\")\r\n  mainInfoSection.classList.add(\"mainInfoSection\")\r\n  mainInfoSection.setAttribute(\"aria-label\", \"city info\")\r\n\r\n  const { name: cityName } = cityCoordinates\r\n\r\n  const city = document.createElement(\"h2\")\r\n  city.textContent = `${cityName}`\r\n  city.classList.add(\"city\")\r\n\r\n  const { main } = weatherObj.current.weather[0]\r\n\r\n  const cityWeather = document.createElement(\"div\")\r\n  cityWeather.textContent = `${main}`\r\n  cityWeather.classList.add(\"city-weather\")\r\n\r\n  const { temp } = weatherObj.current\r\n\r\n  const cityTemp = document.createElement(\"div\")\r\n  cityTemp.textContent = `${roundUp(temp)}°`\r\n  cityTemp.classList.add(\"city-temperature\")\r\n\r\n  // Checks selected metric so that additional text is provided for screen readers as non sighted users may skip or not remember current selected metric\r\n  const selectedMetric = document.querySelector(\".selectedMetric\")\r\n  let metric\r\n\r\n  if (selectedMetric.classList.contains(\"metric-celsius\")) {\r\n    metric = \"Celsius\"\r\n  } else {\r\n    metric = \"Fahrenheit\"\r\n  }\r\n\r\n  const cityTempSrText = document.createElement(\"span\")\r\n  cityTempSrText.textContent = `${metric}`\r\n  cityTempSrText.classList.add(\"visually-hidden\")\r\n\r\n  cityTemp.appendChild(cityTempSrText)\r\n\r\n  const { min, max } = weatherObj.daily[0].temp\r\n\r\n  const cityHighAndLowContainer = document.createElement(\"div\")\r\n  const cityHigh = document.createElement(\"div\")\r\n  const cityLow = document.createElement(\"div\")\r\n\r\n  cityHigh.textContent = `H:${roundUp(max)}°`\r\n  cityLow.textContent = `L:${roundUp(min)}°`\r\n\r\n  cityHigh.classList.add(\"city-highAndLowTemp-high\")\r\n  cityLow.classList.add(\"city-highAndLowTemp-low\")\r\n  cityHighAndLowContainer.classList.add(\"city-highAndLowTemp\")\r\n\r\n  cityHighAndLowContainer.append(cityHigh, cityLow)\r\n\r\n  mainInfoSection.append(city, cityWeather, cityTemp, cityHighAndLowContainer)\r\n\r\n  appendToMainDisplay(mainInfoSection)\r\n}\r\n\r\nexport function createHourlyForecast(weatherObj) {\r\n  const hourlyForecastSection = document.createElement(\"section\")\r\n  hourlyForecastSection.classList.add(\"hourlyForecastSection\")\r\n\r\n  const hourlyForecastHeading = document.createElement(\"h2\")\r\n  hourlyForecastHeading.classList.add(\"hourlyForecast-heading\")\r\n  hourlyForecastHeading.textContent = \"Hourly Forecast\"\r\n\r\n  const hourlyForecastList = document.createElement(\"ul\")\r\n  hourlyForecastList.classList.add(\"hourlyForecast-list\")\r\n\r\n  const arr24Hours = weatherObj.hourly.slice(0, 24)\r\n\r\n  for (let i = 0; i < arr24Hours.length; i += 1) {\r\n    const hourlyForecast = document.createElement(\"li\")\r\n    const hour = document.createElement(\"div\")\r\n    const rainChance = document.createElement(\"div\")\r\n    const weatherImage = new Image()\r\n    const temperature = document.createElement(\"div\")\r\n\r\n    hourlyForecast.classList.add(\"hourlyForecast\")\r\n    hour.classList.add(\"hourlyForecast-hour\")\r\n    rainChance.classList.add(\"hourlyForecast-rainChance\")\r\n    weatherImage.classList.add(\"hourlyForecast-weatherImage\")\r\n    temperature.classList.add(\"hourlyForecast-temperature\")\r\n\r\n    // Gives current hour the text now.\r\n    if (i === 0) {\r\n      hour.textContent = \"Now\"\r\n    } else {\r\n      hour.textContent = `${getHourFromUnixTimestamp(arr24Hours[i].dt)}`\r\n    }\r\n\r\n    if (arr24Hours[i].pop !== 0) {\r\n      rainChance.textContent = `${convertPopToPercentage(arr24Hours[i].pop)}%`\r\n    }\r\n\r\n    // Takes image element, icon src, and icon description and sets the src, alt and title attributes \r\n    handleWeatherIcon(\r\n      weatherImage,\r\n      arr24Hours[i].weather[0].icon,\r\n      arr24Hours[i].weather[0].description,\r\n    )\r\n\r\n    temperature.textContent = `${roundUp(arr24Hours[i].temp)}°`\r\n\r\n    hourlyForecast.append(hour, rainChance, weatherImage, temperature)\r\n    hourlyForecastList.appendChild(hourlyForecast)\r\n  }\r\n\r\n  hourlyForecastSection.append(hourlyForecastHeading, hourlyForecastList)\r\n  appendToMainDisplay(hourlyForecastSection)\r\n}\r\n\r\nexport function createDescription(weatherObj) {\r\n  const { max, min } = weatherObj.temp\r\n  const weatherDescription = weatherObj.weather[0].description\r\n\r\n  const description = document.createElement(\"section\")\r\n  description.setAttribute(\"aria-label\", \"todays description\")\r\n\r\n  const descriptionParagraph = document.createElement(\"p\")\r\n\r\n  description.classList.add(\"todaysDescription\")\r\n  descriptionParagraph.classList.add(\"todaysDescription-paragraph\")\r\n\r\n  descriptionParagraph.textContent = `Today: ${weatherDescription}. The high will be ${roundUp(max)}°. The low will be ${roundUp(min)}°.`\r\n\r\n  description.appendChild(descriptionParagraph)\r\n\r\n  appendToMainDisplay(description)\r\n}\r\n\r\nexport function createDailyForecast(dailyForecastArr) {\r\n  const dailyForecastSection = document.createElement(\"section\")\r\n  dailyForecastSection.classList.add(\"dailyForecastSection\")\r\n\r\n  const dailyForecastHeading = document.createElement(\"h2\")\r\n  dailyForecastHeading.textContent = \"Daily Forecast\"\r\n  dailyForecastHeading.classList.add(\"dailyForecast-heading\")\r\n\r\n  const dailyForecastList = document.createElement(\"ul\")\r\n  dailyForecastList.classList.add(\"dailyForecast-list\")\r\n\r\n  for (let i = 1; i < dailyForecastArr.length; i += 1) {\r\n    const dailyForecast = document.createElement(\"li\")\r\n\r\n    const day = document.createElement(\"div\")\r\n    const weatherIcon = new Image()\r\n    const highAndLowContainer = document.createElement(\"div\")\r\n    const high = document.createElement(\"span\")\r\n    const low = document.createElement(\"span\")\r\n\r\n    dailyForecast.classList.add(\"dailyForecast\")\r\n\r\n    day.classList.add(\"dailyForecast-day\")\r\n    weatherIcon.classList.add(\"dailyForecast-weatherImage\")\r\n    highAndLowContainer.classList.add(\"dailyForecast-highAndLowContainer\")\r\n    high.classList.add(\"dailyForecast-highAndLowContainer-high\")\r\n    low.classList.add(\"dailyForecast-highAndLowContainer-low\")\r\n\r\n    day.textContent = `${getDayFromUnixTimestamp(dailyForecastArr[i].dt)}`\r\n    handleWeatherIcon(\r\n      weatherIcon,\r\n      dailyForecastArr[i].weather[0].icon,\r\n      dailyForecastArr[i].weather[0].description,\r\n    )\r\n    high.textContent = `${roundUp(dailyForecastArr[i].temp.max)}°`\r\n    low.textContent = `${roundUp(dailyForecastArr[i].temp.min)}°`\r\n\r\n    highAndLowContainer.appendChild(high)\r\n    highAndLowContainer.appendChild(low)\r\n\r\n    dailyForecast.appendChild(day)\r\n    dailyForecast.appendChild(weatherIcon)\r\n    dailyForecast.appendChild(highAndLowContainer)\r\n\r\n    dailyForecastList.appendChild(dailyForecast)\r\n  }\r\n\r\n  dailyForecastSection.append(dailyForecastHeading, dailyForecastList)\r\n  appendToContentWrapper(dailyForecastSection)\r\n}\r\n\r\nexport function createGeneralInfo(weatherObj) {\r\n  const generalInfoSection = document.createElement(\"section\")\r\n  generalInfoSection.classList.add(\"generalInfoSection\")\r\n\r\n  const generalInfoHeading = document.createElement(\"h2\")\r\n  generalInfoHeading.textContent = \"General information\"\r\n  generalInfoHeading.classList.add(\"generalInfo-heading\")\r\n\r\n  const generalInfoList = document.createElement(\"ol\")\r\n  generalInfoList.classList.add(\"generalInfo-list\")\r\n\r\n  const { sunrise, sunset } = weatherObj.daily[0]\r\n\r\n  const sunriseContainer = document.createElement(\"li\")\r\n  const sunriseTitle = document.createElement(\"div\")\r\n  const sunriseValue = document.createElement(\"div\")\r\n\r\n  sunriseTitle.textContent = \"SUNRISE\"\r\n  sunriseValue.textContent = `${getHoursAndMinutes(sunrise)}`\r\n\r\n  const sunsetContainer = document.createElement(\"li\")\r\n  const sunsetTitle = document.createElement(\"div\")\r\n  const sunsetValue = document.createElement(\"div\")\r\n\r\n  sunsetTitle.textContent = \"SUNSET\"\r\n  sunsetValue.textContent = `${getHoursAndMinutes(sunset)}`\r\n\r\n  sunriseTitle.classList.add(\"generalInfo-title\")\r\n  sunriseValue.classList.add(\"generalInfo-value\")\r\n\r\n  sunsetTitle.classList.add(\"generalInfo-title\")\r\n  sunsetValue.classList.add(\"generalInfo-value\")\r\n\r\n  sunriseContainer.classList.add(\"generalInfo\")\r\n  sunsetContainer.classList.add(\"generalInfo\")\r\n\r\n  sunriseContainer.append(sunriseTitle, sunriseValue)\r\n  sunsetContainer.append(sunsetTitle, sunsetValue)\r\n\r\n  const { pop } = weatherObj.hourly[0]\r\n\r\n  const chanceOfRainContainer = document.createElement(\"li\")\r\n  const chanceOfRainTitle = document.createElement(\"div\")\r\n  const chanceOfRainValue = document.createElement(\"div\")\r\n\r\n  chanceOfRainTitle.textContent = \"CHANCE OF RAIN\"\r\n  chanceOfRainValue.textContent = `${convertPopToPercentage(pop)}%`\r\n\r\n  chanceOfRainTitle.classList.add(\"generalInfo-title\")\r\n  chanceOfRainValue.classList.add(\"generalInfo-value\")\r\n\r\n  chanceOfRainContainer.classList.add(\"generalInfo\")\r\n\r\n  chanceOfRainContainer.append(chanceOfRainTitle, chanceOfRainValue)\r\n\r\n  const { humidity } = weatherObj.hourly[0]\r\n\r\n  const humidityContainer = document.createElement(\"li\")\r\n  const humidityTitle = document.createElement(\"div\")\r\n  const humidityValue = document.createElement(\"div\")\r\n\r\n  humidityTitle.textContent = \"HUMIDITY\"\r\n  humidityValue.textContent = `${humidity}%`\r\n\r\n  humidityTitle.classList.add(\"generalInfo-title\")\r\n  humidityValue.classList.add(\"generalInfo-value\")\r\n\r\n  humidityContainer.classList.add(\"generalInfo\")\r\n\r\n  humidityContainer.append(humidityTitle, humidityValue)\r\n\r\n  const { wind_speed: windSpeed, wind_deg: windDeg } = weatherObj.hourly[0]\r\n\r\n  const windContainer = document.createElement(\"li\")\r\n  const windTitle = document.createElement(\"div\")\r\n  const windValue = document.createElement(\"div\")\r\n\r\n  windTitle.textContent = \"WIND\"\r\n\r\n  const windDirection = findWindDirection(windDeg)\r\n\r\n  windValue.textContent = `${windDirection} ${roundUp(handleCorrectMetric(windSpeed))} km/hr`\r\n\r\n  windTitle.classList.add(\"generalInfo-title\")\r\n  windValue.classList.add(\"generalInfo-value\")\r\n\r\n  windContainer.classList.add(\"generalInfo\")\r\n\r\n  windContainer.append(windTitle, windValue)\r\n\r\n  const { feels_like: feelsLike } = weatherObj.hourly[0]\r\n\r\n  const feelsLikeContainer = document.createElement(\"li\")\r\n  const feelsLikeTitle = document.createElement(\"div\")\r\n  const feelsLikeValue = document.createElement(\"div\")\r\n\r\n  feelsLikeTitle.textContent = \"FEELS LIKE\"\r\n  feelsLikeValue.textContent = `${roundUp(feelsLike)}°`\r\n\r\n  feelsLikeTitle.classList.add(\"generalInfo-title\")\r\n  feelsLikeValue.classList.add(\"generalInfo-value\")\r\n\r\n  feelsLikeContainer.classList.add(\"generalInfo\")\r\n\r\n  feelsLikeContainer.append(feelsLikeTitle, feelsLikeValue)\r\n\r\n  const { rain } = weatherObj.daily[0]\r\n\r\n  const precipitationContainer = document.createElement(\"li\")\r\n  const precipitationTitle = document.createElement(\"div\")\r\n  const precipitationValue = document.createElement(\"div\")\r\n\r\n  precipitationTitle.textContent = \"PRECIPITATION\"\r\n  precipitationValue.textContent = `${rain} mm/h`\r\n\r\n  if (rain === undefined) {\r\n    precipitationValue.textContent = 0\r\n  }\r\n\r\n  precipitationTitle.classList.add(\"generalInfo-title\")\r\n  precipitationValue.classList.add(\"generalInfo-value\")\r\n\r\n  precipitationContainer.classList.add(\"generalInfo\")\r\n\r\n  precipitationContainer.append(precipitationTitle, precipitationValue)\r\n\r\n  const { pressure } = weatherObj.hourly[0]\r\n\r\n  const pressureContainer = document.createElement(\"li\")\r\n  const pressureTitle = document.createElement(\"div\")\r\n  const pressureValue = document.createElement(\"div\")\r\n\r\n  pressureTitle.textContent = \"PRESSURE\"\r\n  pressureValue.textContent = `${pressure} hPa`\r\n\r\n  pressureTitle.classList.add(\"generalInfo-title\")\r\n  pressureValue.classList.add(\"generalInfo-value\")\r\n\r\n  pressureContainer.classList.add(\"generalInfo\")\r\n\r\n  pressureContainer.append(pressureTitle, pressureValue)\r\n\r\n  const { visibility } = weatherObj.hourly[0]\r\n\r\n  const visibilityContainer = document.createElement(\"li\")\r\n  const visibilityTitle = document.createElement(\"div\")\r\n  const visibilityValue = document.createElement(\"div\")\r\n\r\n  visibilityTitle.textContent = \"VISIBILITY\"\r\n  visibilityValue.textContent = `${convertMetersToKilometers(visibility)} km`\r\n\r\n  visibilityTitle.classList.add(\"generalInfo-title\")\r\n  visibilityValue.classList.add(\"generalInfo-value\")\r\n\r\n  visibilityContainer.classList.add(\"generalInfo\")\r\n\r\n  visibilityContainer.append(visibilityTitle, visibilityValue)\r\n\r\n  const { uvi } = weatherObj.hourly[0]\r\n\r\n  const uviIndexContainer = document.createElement(\"li\")\r\n  const uviIndexTitle = document.createElement(\"div\")\r\n  const uviIndexValue = document.createElement(\"div\")\r\n\r\n  uviIndexTitle.textContent = \"UVI INDEX\"\r\n  uviIndexValue.textContent = `${uvi}`\r\n\r\n  uviIndexTitle.classList.add(\"generalInfo-title\")\r\n  uviIndexValue.classList.add(\"generalInfo-value\")\r\n\r\n  uviIndexContainer.classList.add(\"generalInfo\")\r\n\r\n  uviIndexContainer.append(uviIndexTitle, uviIndexValue)\r\n\r\n  generalInfoList.append(\r\n    sunriseContainer,\r\n    sunsetContainer,\r\n    chanceOfRainContainer,\r\n    humidityContainer,\r\n    windContainer,\r\n    pressureContainer,\r\n    feelsLikeContainer,\r\n    precipitationContainer,\r\n    precipitationContainer,\r\n    visibilityContainer,\r\n    uviIndexContainer,\r\n  )\r\n\r\n  generalInfoSection.append(generalInfoHeading, generalInfoList)\r\n\r\n  appendToContentWrapper(generalInfoSection)\r\n}\r\n"],"names":["toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","getHours","date","fromUnixTime","unixTime","convertPopToPercentage","unit","Math","floor","getDayFromUnixTimestamp","unix","day","getDay","getHoursAndMinutes","hours","minutes","getMinutes","length","roundUp","round","appendToMainDisplay","element","document","querySelector","appendChild","appendToContentWrapper","handleMediaQueryMin768","event","generalInfoSection","dailyForecastSection","contentWrapper","matches","remove","insertBefore","mediaQueryMin768","window","matchMedia","handleWeatherIcon","weatherImage","iconCode","iconDescription","image","src","setAttribute","async","searchManager","city","content","clearContentWrapper","classList","add","weatherContentWrapper","createElement","coordinatesObj","fetch","mode","then","res","ok","Error","json","lat","lon","name","catch","err","message","getCordinates","selectedMetric","metricForApi","contains","weatherObj","metric","status","statusText","console","error","getWeather","mainDisplay","createMainDisplay","cityCoordinates","mainInfoSection","cityName","textContent","main","current","weather","cityWeather","temp","cityTemp","cityTempSrText","min","max","daily","cityHighAndLowContainer","cityHigh","cityLow","append","createMainInfo","hourlyForecastSection","hourlyForecastHeading","hourlyForecastList","arr24Hours","hourly","slice","i","hourlyForecast","hour","rainChance","Image","temperature","dt","pop","icon","description","createHourlyForecast","weatherDescription","descriptionParagraph","createDescription","dailyForecastArr","dailyForecastHeading","dailyForecastList","dailyForecast","weatherIcon","highAndLowContainer","high","low","createDailyForecast","generalInfoHeading","generalInfoList","sunrise","sunset","sunriseContainer","sunriseTitle","sunriseValue","sunsetContainer","sunsetTitle","sunsetValue","chanceOfRainContainer","chanceOfRainTitle","chanceOfRainValue","humidity","humidityContainer","humidityTitle","humidityValue","wind_speed","windSpeed","wind_deg","windDeg","windContainer","windTitle","windValue","windDirection","deg","directionsArr","directionName","degrees","findWindDirection","handleCorrectMetric","feels_like","feelsLike","feelsLikeContainer","feelsLikeTitle","feelsLikeValue","rain","precipitationContainer","precipitationTitle","precipitationValue","undefined","pressure","pressureContainer","pressureTitle","pressureValue","visibility","visibilityContainer","visibilityTitle","visibilityValue","uvi","uviIndexContainer","uviIndexTitle","uviIndexValue","createGeneralInfo","toggleMetricBtn","addEventListener","celsiusMetric","fahrenheitMetric","e","preventDefault","searchValue","value"],"sourceRoot":""}