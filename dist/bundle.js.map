{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://basetemplate/./node_modules/date-fns/toDate.mjs","webpack://basetemplate/./node_modules/date-fns/fromUnixTime.mjs","webpack://basetemplate/./src/index.js","webpack://basetemplate/./node_modules/date-fns/getHours.mjs","webpack://basetemplate/./node_modules/date-fns/getDay.mjs"],"sourcesContent":["/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import { fromUnixTime, getHours, getDay } from \"date-fns\"\n\nfunction getHourFromUnixTimestamp(unix) {\n  const date = fromUnixTime(unix)\n  const hour = getHours(date)\n\n  return hour\n}\n\nfunction roundUp(unit) {\n  return Math.round(unit)\n}\n\nfunction convertPopToPercentage(unit) {\n  return Math.floor(unit * 100)\n}\n\nfunction getDayFromUnixTimestamp(unix) {\n  const date = fromUnixTime(unix)\n  const day = getDay(date)\n\n  if(day === 0) {\n    return \"Sunday\"\n  } \n\n  if(day === 1) {\n    return \"Monday\"\n  }\n\n  if(day === 2) {\n    return \"Tuesday\"\n  }\n  \n  if(day === 3) {\n    return \"Wednesday\"\n  }\n\n  if(day === 4) {\n    return \"Thursday\"\n  }\n\n  if(day === 5) {\n    return \"Friday\"\n  }\n\n  if(day === 6) {\n    return \"Saturday\"\n  }\n}\n\ngetDayFromUnixTimestamp(1716976800)\n\nfunction getWeatherIcon(iconCode) {\n  return `https://openweathermap.org/img/wn/${iconCode}@2x.png`\n}\n\nfunction clearHourlyForecastContainer() {\n  document.querySelector(\".hourlyForecastContainer\").remove()\n}\n\nfunction createHourlyForecast(arr) {\n  const hourlyForecastContainer = document.createElement(\"div\")\n\n  for (let i = 0; i < arr.length; i += 1) {\n    const hourlyForecast = document.createElement(\"div\")\n    const hour = document.createElement(\"div\")\n    const rainChance = document.createElement(\"div\")\n    const weatherImage = new Image()\n    const temperature = document.createElement(\"div\")\n\n    hourlyForecastContainer.classList.add(\"hourlyForecastContainer\")\n\n    hourlyForecast.classList.add(\"hourlyForecast\")\n    hour.classList.add(\"hourlyForecast-hour\")\n    rainChance.classList.add(\"hourlyForecast-rainChance\")\n    weatherImage.classList.add(\"hourlyForecast-weatherImage\")\n    temperature.classList.add(\"hourlyForecast-temperature\")\n\n    if (i === 0) {\n      hour.textContent = \"Now\"\n    } else {\n      console.log(arr[i].dt)\n      console.log(`${getHourFromUnixTimestamp(arr[i].dt)}`)\n      hour.textContent = `${getHourFromUnixTimestamp(arr[i].dt)}`\n    }\n\n    if (arr[i].pop !== 0) {\n      rainChance.textContent = `${convertPopToPercentage(arr[i].pop)}%`\n    }\n\n    weatherImage.src = getWeatherIcon(arr[i].weather[0].icon)\n\n    console.log(arr[i].tem)\n\n    temperature.textContent = `${roundUp(arr[i].temp)}Â°`\n\n    hourlyForecast.appendChild(hour)\n    hourlyForecast.appendChild(rainChance)\n    hourlyForecast.appendChild(weatherImage)\n    hourlyForecast.appendChild(temperature)\n\n    hourlyForecastContainer.appendChild(hourlyForecast)\n\n    const body = document.querySelector(\"body\")\n\n    body.appendChild(hourlyForecastContainer)\n  }\n}\n\nfunction getCordinates(city) {\n  return fetch(\n    `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=2815b9b71f4c4387bd5d1f3c3f298af6`,\n    { mode: \"cors\" },\n  )\n    .then((res) => {\n      console.log(res)\n      if (res.ok === false) {\n        throw new Error(\n          `getCordinates fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n        )\n      }\n      return res.json()\n    })\n    .then((res) => {\n      console.log(res)\n      const { lat, lon, name } = res[0]\n      console.log(lat, lon)\n      return { name, lat, lon }\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nfunction getWeather(lat, lon) {\n  return fetch(\n    `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=2815b9b71f4c4387bd5d1f3c3f298af6&units=metric`,\n    { mode: \"cors\" },\n  )\n    .then((res) => {\n      if (res.ok === false) {\n        throw new Error(\n          `getWeather fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n        )\n      }\n      return res.json()\n    })\n    .then((res) => {\n      console.log(res)\n      return res\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nasync function handleCitySearch(city) {\n  const result = await getCordinates(city)\n\n  const { name: cityName, lat, lon } = result\n\n  const weather = await getWeather(lat, lon)\n\n  const cityDisplay = document.querySelector(\".city\")\n  cityDisplay.textContent = cityName\n\n  const { main } = weather.current.weather[0]\n\n  const cityWeather = document.querySelector(\".city-weather\")\n  cityWeather.textContent = main\n\n  const { temp } = weather.current\n\n  const cityTemp = document.querySelector(\".city-temperature\")\n  cityTemp.textContent = `${roundUp(temp)}Â°`\n\n  const { min, max } = weather.daily[0].temp\n\n  const cityHigh = document.querySelector(\".city-high\")\n  const cityLow = document.querySelector(\".city-low\")\n\n  cityHigh.textContent = `H:${roundUp(max)}Â°`\n  cityLow.textContent = `L:${roundUp(min)}Â°`\n\n  const hourlyForecast24Arr = weather.hourly.slice(0, 24)\n\n  if (document.querySelector(\".hourlyForecastContainer\") !== null) {\n    clearHourlyForecastContainer()\n    createHourlyForecast(hourlyForecast24Arr)\n  } else {\n    createHourlyForecast(hourlyForecast24Arr)\n  }\n\n  createDescription(weather.daily[0])\n  createDailyForecast(weather.daily)\n\n}\n\nfunction createDailyForecast(arr) {\n  const dailyForecastContainer = document.createElement(\"div\")\n\n  dailyForecastContainer.classList.add(\"dailyForecastContainer\")\n\n  for(let i = 1; i < arr.length; i += 1) {\n    const dailyForecast = document.createElement(\"div\")\n\n    const day = document.createElement(\"div\")\n    const weatherIcon = new Image()\n    const highAndLowContainer = document.createElement(\"div\")\n    const high = document.createElement(\"span\")\n    const low = document.createElement(\"span\")\n    \n    dailyForecast.classList.add(\"dailyForecast\")\n\n    day.classList.add(\"dailyForecast-day\")\n    weatherIcon.classList.add(\"dailyForecast-weatherImage\")\n    highAndLowContainer.classList.add(\"dailyForecast-highAndLowContainer\")\n    high.classList.add(\"dailyForecast-highAndLowContainer-high\")\n    low.classList.add(\"dailyForecast-highAndLowContainer-low\")\n\n    day.textContent = `${getDayFromUnixTimestamp(arr[i].dt)}`\n    weatherIcon.src = getWeatherIcon(arr[i].weather[0].icon)\n    high.textContent = `${roundUp(arr[i].temp.max)}Â°`\n    low.textContent = `${roundUp(arr[i].temp.min)}Â°`\n\n    highAndLowContainer.appendChild(high)\n    highAndLowContainer.appendChild(low)\n\n    dailyForecast.appendChild(day)\n    dailyForecast.appendChild(weatherIcon)\n    dailyForecast.appendChild(highAndLowContainer)\n\n    dailyForecastContainer.appendChild(dailyForecast)\n  }\n\n  const body = document.querySelector(\"body\")\n\n  body.appendChild(dailyForecastContainer)\n}\n\nfunction createDescription(obj) {\n  console.log(obj)\n  const { max , min } = obj.temp\n  const descriptionValue = obj.weather[0].description\n\n  const description = document.createElement(\"div\")\n  const descriptionParagraph = document.createElement(\"p\")\n\n  description.classList.add(\"todaysDescription\")\n  descriptionParagraph.classList.add(\"todaysDescription-paragraph\")\n\n  descriptionParagraph.textContent = `Today: ${descriptionValue}. The high will be ${roundUp(max)}Â°. The low will be ${roundUp(min)}Â°.`\n\n  description.appendChild(descriptionParagraph)\n  const body = document.querySelector(\"body\");\n  body.appendChild(description)\n}\n\nconst searchBtn = document.querySelector(\".search-btn\")\n\nsearchBtn.addEventListener(\"click\", (e) => {\n  const searchValue = document.querySelector(\".search-input\").value\n  const searchInput = document.querySelector(\".search-input\")\n  searchInput.value = \"\"\n\n  handleCitySearch(searchValue)\n  e.preventDefault()\n})\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport function getHours(date) {\n  const _date = toDate(date);\n  const hours = _date.getHours();\n  return hours;\n}\n\n// Fallback for modularized imports:\nexport default getHours;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date) {\n  const _date = toDate(date);\n  const day = _date.getDay();\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n"],"names":["toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","fromUnixTime","unixTime","getHourFromUnixTimestamp","unix","getHours","roundUp","unit","Math","round","getDayFromUnixTimestamp","day","getDay","getWeatherIcon","iconCode","createHourlyForecast","arr","hourlyForecastContainer","document","createElement","i","length","hourlyForecast","hour","rainChance","weatherImage","Image","temperature","classList","add","textContent","console","log","dt","pop","floor","src","weather","icon","tem","temp","appendChild","querySelector","addEventListener","e","searchValue","value","async","city","result","fetch","mode","then","res","ok","Error","status","statusText","json","lat","lon","name","catch","err","error","getCordinates","cityName","getWeather","main","current","min","max","daily","cityHigh","cityLow","hourlyForecast24Arr","hourly","slice","remove","obj","descriptionValue","description","descriptionParagraph","createDescription","dailyForecastContainer","dailyForecast","weatherIcon","highAndLowContainer","high","low","createDailyForecast","handleCitySearch","preventDefault"],"sourceRoot":""}