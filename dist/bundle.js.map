{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://basetemplate/./src/apiFunctions.js","webpack://basetemplate/./node_modules/date-fns/toDate.mjs","webpack://basetemplate/./node_modules/date-fns/getHours.mjs","webpack://basetemplate/./node_modules/date-fns/fromUnixTime.mjs","webpack://basetemplate/./src/helperFunctions.js","webpack://basetemplate/./node_modules/date-fns/getDay.mjs","webpack://basetemplate/./node_modules/date-fns/getMinutes.mjs","webpack://basetemplate/./src/index.js","webpack://basetemplate/./src/builderFunctions.js"],"sourcesContent":["export function getCordinates(city) {\n  return fetch(\n    `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=2815b9b71f4c4387bd5d1f3c3f298af6`,\n    { mode: \"cors\" },\n  )\n    .then((res) => {\n      if (res.ok === false) {\n        throw new Error(\n          `getCordinates fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n        )\n      }\n      return res.json()\n    })\n    .then((res) => {\n      const { lat, lon, name } = res[0]\n      return { name, lat, lon }\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nexport function getWeather(lat, lon, metric) {\n  return fetch(\n    `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=2815b9b71f4c4387bd5d1f3c3f298af6&units=${metric}`,\n    { mode: \"cors\" },\n  )\n    .then((res) => {\n      if (res.ok === false) {\n        throw new Error(\n          `getWeather fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n        )\n      }\n      return res.json()\n    })\n    .then((res) => {\n      console.log(res)\n      return res\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nexport function handleWeatherIcon(weatherImage, iconCode, iconDescription) {\n  weatherImage.src = `https://openweathermap.org/img/wn/${iconCode}@2x.png`\n  weatherImage.setAttribute(\"alt\", `${iconDescription}`)\n  weatherImage.setAttribute(\"title\", `${iconDescription}`)\n\n}\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport function getHours(date) {\n  const _date = toDate(date);\n  const hours = _date.getHours();\n  return hours;\n}\n\n// Fallback for modularized imports:\nexport default getHours;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import { fromUnixTime, getHours, getMinutes, getDay } from \"date-fns\"\n\nexport function convertPopToPercentage(unit) {\n  return Math.floor(unit * 100)\n}\n\nfunction convertMetersPerSecondToKhH(unit) {\n  return unit * 3.6\n}\n\nfunction convertMilesPerHourToKhH(unit) {\n  return unit * 1.609344\n}\n\nexport function convertMetersToKilometers(unit) {\n  return unit / 100\n}\n\nexport function getHourFromUnixTimestamp(unix) {\n  return getHours(fromUnixTime(unix))\n}\n\nexport function handleCorrectMetric(unit) {\n  const selected = document.querySelector(\".selectedMetric\")\n\n  if (selected.classList.contains(\"metric-celsius\")) {\n    return convertMetersPerSecondToKhH(unit)\n  }\n\n  return convertMilesPerHourToKhH(unit)\n}\n\nexport function getDayFromUnixTimestamp(unix) {\n  const day = getDay(fromUnixTime(unix))\n\n  if (day === 0) {\n    return \"Sunday\"\n  }\n\n  if (day === 1) {\n    return \"Monday\"\n  }\n\n  if (day === 2) {\n    return \"Tuesday\"\n  }\n\n  if (day === 3) {\n    return \"Wednesday\"\n  }\n\n  if (day === 4) {\n    return \"Thursday\"\n  }\n\n  if (day === 5) {\n    return \"Friday\"\n  }\n\n  if (day === 6) {\n    return \"Saturday\"\n  }\n\n  return undefined\n}\n\nexport function getHoursAndMinutes(unit) {\n  const date = fromUnixTime(unit)\n  const hours = getHours(date)\n  let minutes = getMinutes(date)\n\n  if (minutes.toString(10).length === 1) {\n    minutes = `0${minutes}`\n  }\n\n  return `${hours} : ${minutes}`\n}\n\nexport function roundUp(unit) {\n  return Math.round(unit)\n}\n\nexport function findCompassDirection(deg) {\n  const directionsArr = [\n    { directionName: \"N\", degrees: 0 },\n    { directionName: \"NNE\", degrees: 22.5 },\n    { directionName: \"NE\", degrees: 45 },\n    { directionName: \"ENE\", degrees: 67.5 },\n    { directionName: \"E\", degrees: 90 },\n    { directionName: \"ESE\", degrees: 112.5 },\n    { directionName: \"SE\", degrees: 135 },\n    { directionName: \"SSE\", degrees: 157.5 },\n    { directionName: \"S\", degrees: 180 },\n    { directionName: \"SSW\", degrees: 202.5 },\n    { directionName: \"SW\", degrees: 225 },\n    { directionName: \"WSW\", degrees: 247.5 },\n    { directionName: \"W\", degrees: 270 },\n    { directionName: \"WNW\", degrees: 292.5 },\n    { directionName: \"NW\", degrees: 315 },\n    { directionName: \"NNW\", degrees: 337.5 },\n    { directionName: \"N\", degrees: 360 },\n  ]\n\n  for (let i = 0; i < directionsArr.length; i += 1) {\n    if (directionsArr[i].degrees === deg) {\n      return directionsArr[i].directionName\n    }\n\n    if (directionsArr[i].degrees > deg) {\n      const prevMinusDeg = deg - directionsArr[i - 1].degrees\n      const currMinusDeg = directionsArr[i].degrees - deg\n\n      if (prevMinusDeg < currMinusDeg) {\n        return directionsArr[i - 1].directionName\n      }\n\n      return directionsArr[i].directionName\n    }\n  }\n\n  return undefined\n}\n\nexport function clearContentWrapper() {\n  const content = document.querySelector(\".weather-content-wrapper\")\n\n  if (content) {\n    content.remove()\n  }\n}\n\nexport const mediaQueryMin768 = window.matchMedia(\"(min-width: 768px\")\n\nexport function handleMediaQueryMin768(event) {\n  const generalInfoContainer = document.querySelector(\".generalInfo-container\")\n  const dailyForecastContainer = document.querySelector(\n    \".dailyForecastContainer\",\n  )\n  const contentWrapper = document.querySelector(\".weather-content-wrapper\")\n\n  if (event.matches) {\n    generalInfoContainer.remove()\n    contentWrapper.insertBefore(generalInfoContainer, dailyForecastContainer)\n  } else {\n    generalInfoContainer.remove()\n    contentWrapper.appendChild(generalInfoContainer)\n  }\n}\n\nmediaQueryMin768.addEventListener(\"change\", handleMediaQueryMin768)\n\nexport function appendToMainDisplay(element) {\n  document.querySelector(\".l-mainDisplay\").appendChild(element)\n}\n\nexport function appendToContentWrapper(element) {\n  document.querySelector(\".weather-content-wrapper\").appendChild(element)\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date) {\n  const _date = toDate(date);\n  const day = _date.getDay();\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nexport function getMinutes(date) {\n  const _date = toDate(date);\n  const minutes = _date.getMinutes();\n  return minutes;\n}\n\n// Fallback for modularized imports:\nexport default getMinutes;\n","import { getCordinates, getWeather } from \"./apiFunctions\"\nimport {\n  createMainDisplay,\n  createMainInfo,\n  createHourlyForecast,\n  createDescription,\n  createDailyForecast,\n  createGeneralInfo,\n} from \"./builderFunctions\"\nimport {\n  clearContentWrapper,\n  mediaQueryMin768,\n  handleMediaQueryMin768,\n} from \"./helperFunctions\"\n\nconst main = document.querySelector(\"main\")\n\nfunction handleLoader() {\n  const loader = document.querySelector(\".loader\")\n\n  if(loader.classList.contains(\"loader-isHidden\")) {\n    loader.classList.remove(\"loader-isHidden\")\n  } else if (loader.classList.contains(\"loader-isHidden\") === false) {\n    loader.classList.add(\"loader-isHidden\")  \n  }\n}\n\nasync function handleCitySearch(city) {\n  clearContentWrapper()\n  handleLoader()\n\n  const weatherContentWrapper = document.createElement(\"div\")\n  weatherContentWrapper.classList.add(\"weather-content-wrapper\")\n  main.appendChild(weatherContentWrapper)\n\n  const coordinatesObj = await getCordinates(city)\n  const { lat, lon } = coordinatesObj\n\n  const selectedMetric = document.querySelector(\".selectedMetric\")\n\n  let metricForApi\n\n  if (selectedMetric.classList.contains(\"metric-celsius\")) {\n    metricForApi = \"metric\"\n  }\n\n  if (selectedMetric.classList.contains(\"metric-fahrenheit\")) {\n    metricForApi = \"imperial\"\n  }\n\n  const weatherObj = await getWeather(lat, lon, metricForApi)\n  handleLoader()\n\n  createMainDisplay()\n  createMainInfo(coordinatesObj, weatherObj)\n  createHourlyForecast(weatherObj)\n  createDescription(weatherObj.daily[0])\n  createDailyForecast(weatherObj.daily)\n  createGeneralInfo(weatherObj)\n\n  handleMediaQueryMin768(mediaQueryMin768)\n}\n\nconst toggleMetricBtn = document.querySelector(\".toggleMetric\")\n\ntoggleMetricBtn.addEventListener(\"click\", () => {\n  const celsiusMetric = document.querySelector(\".metric-celsius\")\n  const fahrenheitMetric = document.querySelector(\".metric-fahrenheit\")\n\n  if (celsiusMetric.classList.contains(\"selectedMetric\")) {\n    celsiusMetric.classList.remove(\"selectedMetric\")\n    fahrenheitMetric.classList.add(\"selectedMetric\")\n  } else {\n    celsiusMetric.classList.add(\"selectedMetric\")\n    fahrenheitMetric.classList.remove(\"selectedMetric\")\n  }\n\n  if (document.querySelector(\".weather-content-wrapper\")) {\n    const city = document.querySelector(\".city\").textContent\n\n    handleCitySearch(city)\n  }\n})\n\nconst searchBtn = document.querySelector(\".search-btn\")\n\nsearchBtn.addEventListener(\"click\", (e) => {\n  const searchValue = document.querySelector(\".search-input\").value\n  const searchInput = document.querySelector(\".search-input\")\n  searchInput.value = \"\"\n\n  handleCitySearch(searchValue)\n  e.preventDefault()\n})\n\n\n","import { handleWeatherIcon } from \"./apiFunctions\"\nimport {\n  roundUp,\n  convertMetersToKilometers,\n  convertPopToPercentage,\n  handleCorrectMetric,\n  getDayFromUnixTimestamp,\n  getHourFromUnixTimestamp,\n  getHoursAndMinutes,\n  findCompassDirection,\n  appendToMainDisplay,\n  appendToContentWrapper,\n} from \"./helperFunctions\"\n\nexport function createMainDisplay() {\n  const mainDisplay = document.createElement(\"div\")\n  mainDisplay.classList.add(\"l-mainDisplay\")\n\n  const contentWrapper = document.querySelector(\".weather-content-wrapper\")\n  contentWrapper.appendChild(mainDisplay)\n}\n\nexport function createMainInfo(cityCoordinates, weatherObj) {\n  const mainInfo = document.createElement(\"div\")\n  mainInfo.classList.add(\"mainInfo\")\n\n  const { name: cityName } = cityCoordinates\n\n  const city = document.createElement(\"div\")\n  city.textContent = `${cityName}`\n  city.classList.add(\"city\")\n\n  const { main } = weatherObj.current.weather[0]\n\n  const cityWeather = document.createElement(\"div\")\n  cityWeather.textContent = `${main}`\n  cityWeather.classList.add(\"city-weather\")\n\n  const { temp } = weatherObj.current\n\n  const cityTemp = document.createElement(\"div\")\n  cityTemp.textContent = `${roundUp(temp)}°`\n  cityTemp.classList.add(\"city-temperature\")\n\n  const { min, max } = weatherObj.daily[0].temp\n\n  const cityHighAndLowContainer = document.createElement(\"div\")\n  const cityHigh = document.createElement(\"div\")\n  const cityLow = document.createElement(\"div\")\n\n  cityHigh.textContent = `H:${roundUp(max)}°`\n  cityLow.textContent = `L:${roundUp(min)}°`\n\n  cityHigh.classList.add(\"city-highAndLowTemp-high\")\n  cityLow.classList.add(\"city-highAndLowTemp-low\")\n  cityHighAndLowContainer.classList.add(\"city-highAndLowTemp\")\n\n  cityHighAndLowContainer.append(cityHigh, cityLow)\n\n  mainInfo.append(city, cityWeather, cityTemp, cityHighAndLowContainer)\n\n  appendToMainDisplay(mainInfo)\n}\n\nexport function createHourlyForecast(weatherObj) {\n  const arr24Hours = weatherObj.hourly.slice(0, 24)\n\n  const hourlyForecastContainer = document.createElement(\"div\")\n  hourlyForecastContainer.classList.add(\"hourlyForecastContainer\")\n\n  for (let i = 0; i < arr24Hours.length; i += 1) {\n    const hourlyForecast = document.createElement(\"div\")\n    const hour = document.createElement(\"div\")\n    const rainChance = document.createElement(\"div\")\n    const weatherImage = new Image()\n    const temperature = document.createElement(\"div\")\n\n    hourlyForecast.classList.add(\"hourlyForecast\")\n    hour.classList.add(\"hourlyForecast-hour\")\n    rainChance.classList.add(\"hourlyForecast-rainChance\")\n    weatherImage.classList.add(\"hourlyForecast-weatherImage\")\n    temperature.classList.add(\"hourlyForecast-temperature\")\n\n    if (i === 0) {\n      hour.textContent = \"Now\"\n    } else {\n      hour.textContent = `${getHourFromUnixTimestamp(arr24Hours[i].dt)}`\n    }\n\n    if (arr24Hours[i].pop !== 0) {\n      rainChance.textContent = `${convertPopToPercentage(arr24Hours[i].pop)}%`\n    }\n\n    handleWeatherIcon(weatherImage, arr24Hours[i].weather[0].icon, arr24Hours[i].weather[0].description)\n\n    temperature.textContent = `${roundUp(arr24Hours[i].temp)}°`\n\n    hourlyForecast.append(hour, rainChance, weatherImage, temperature)\n    hourlyForecastContainer.appendChild(hourlyForecast)\n  }\n\n  appendToMainDisplay(hourlyForecastContainer)\n}\n\nexport function createDescription(weatherObj) {\n  const { max, min } = weatherObj.temp\n  const descriptionValue = weatherObj.weather[0].description\n\n  const description = document.createElement(\"div\")\n  const descriptionParagraph = document.createElement(\"p\")\n\n  description.classList.add(\"todaysDescription\")\n  descriptionParagraph.classList.add(\"todaysDescription-paragraph\")\n\n  descriptionParagraph.textContent = `Today: ${descriptionValue}. The high will be ${roundUp(max)}°. The low will be ${roundUp(min)}°.`\n\n  description.appendChild(descriptionParagraph)\n\n  appendToMainDisplay(description)\n}\n\nexport function createDailyForecast(dailyForecastArr) {\n  const dailyForecastContainer = document.createElement(\"div\")\n\n  dailyForecastContainer.classList.add(\"dailyForecastContainer\")\n\n  for (let i = 1; i < dailyForecastArr.length; i += 1) {\n    const dailyForecast = document.createElement(\"div\")\n\n    const day = document.createElement(\"div\")\n    const weatherIcon = new Image()\n    const highAndLowContainer = document.createElement(\"div\")\n    const high = document.createElement(\"span\")\n    const low = document.createElement(\"span\")\n\n    dailyForecast.classList.add(\"dailyForecast\")\n\n    day.classList.add(\"dailyForecast-day\")\n    weatherIcon.classList.add(\"dailyForecast-weatherImage\")\n    highAndLowContainer.classList.add(\"dailyForecast-highAndLowContainer\")\n    high.classList.add(\"dailyForecast-highAndLowContainer-high\")\n    low.classList.add(\"dailyForecast-highAndLowContainer-low\")\n\n    day.textContent = `${getDayFromUnixTimestamp(dailyForecastArr[i].dt)}`\n    handleWeatherIcon(weatherIcon, dailyForecastArr[i].weather[0].icon, dailyForecastArr[i].weather[0].description)\n    high.textContent = `${roundUp(dailyForecastArr[i].temp.max)}°`\n    low.textContent = `${roundUp(dailyForecastArr[i].temp.min)}°`\n\n    highAndLowContainer.appendChild(high)\n    highAndLowContainer.appendChild(low)\n\n    dailyForecast.appendChild(day)\n    dailyForecast.appendChild(weatherIcon)\n    dailyForecast.appendChild(highAndLowContainer)\n\n    dailyForecastContainer.appendChild(dailyForecast)\n  }\n\n  appendToContentWrapper(dailyForecastContainer)\n}\n\nexport function createGeneralInfo(weatherObj) {\n  const generalInfoContainer = document.createElement(\"div\")\n\n  generalInfoContainer.classList.add(\"generalInfo-container\")\n\n  const { sunrise, sunset } = weatherObj.daily[0]\n\n  const sunriseContainer = document.createElement(\"div\")\n  const sunriseTitle = document.createElement(\"div\")\n  const sunriseValue = document.createElement(\"div\")\n\n  sunriseTitle.textContent = \"SUNRISE\"\n  sunriseValue.textContent = `${getHoursAndMinutes(sunrise)}`\n\n  const sunsetContainer = document.createElement(\"div\")\n  const sunsetTitle = document.createElement(\"div\")\n  const sunsetValue = document.createElement(\"div\")\n\n  sunsetTitle.textContent = \"SUNSET\"\n  sunsetValue.textContent = `${getHoursAndMinutes(sunset)}`\n\n  sunriseTitle.classList.add(\"generalInfo-title\")\n  sunriseValue.classList.add(\"generalInfo-value\")\n\n  sunsetTitle.classList.add(\"generalInfo-title\")\n  sunsetValue.classList.add(\"generalInfo-value\")\n\n  sunriseContainer.classList.add(\"generalInfo\")\n  sunsetContainer.classList.add(\"generalInfo\")\n\n  sunriseContainer.append(sunriseTitle, sunriseValue)\n  sunsetContainer.append(sunsetTitle, sunsetValue)\n\n  const { pop } = weatherObj.hourly[0]\n\n  const chanceOfRainContainer = document.createElement(\"div\")\n  const chanceOfRainTitle = document.createElement(\"div\")\n  const chanceOfRainValue = document.createElement(\"div\")\n\n  chanceOfRainTitle.textContent = \"CHANCE OF RAIN\"\n  chanceOfRainValue.textContent = `${convertPopToPercentage(pop)}%`\n\n  chanceOfRainTitle.classList.add(\"generalInfo-title\")\n  chanceOfRainValue.classList.add(\"generalInfo-value\")\n\n  chanceOfRainContainer.classList.add(\"generalInfo\")\n\n  chanceOfRainContainer.append(chanceOfRainTitle, chanceOfRainValue)\n\n  const { humidity } = weatherObj.hourly[0]\n\n  const humidityContainer = document.createElement(\"div\")\n  const humidityTitle = document.createElement(\"div\")\n  const humidityValue = document.createElement(\"div\")\n\n  humidityTitle.textContent = \"HUMIDITY\"\n  humidityValue.textContent = `${humidity}%`\n\n  humidityTitle.classList.add(\"generalInfo-title\")\n  humidityValue.classList.add(\"generalInfo-value\")\n\n  humidityContainer.classList.add(\"generalInfo\")\n\n  humidityContainer.append(humidityTitle, humidityValue)\n\n  const { wind_speed: windSpeed, wind_deg: windDeg } = weatherObj.hourly[0]\n\n  const windContainer = document.createElement(\"div\")\n  const windTitle = document.createElement(\"div\")\n  const windValue = document.createElement(\"div\")\n\n  windTitle.textContent = \"WIND\"\n\n  const compassDirection = findCompassDirection(windDeg)\n\n  windValue.textContent = `${compassDirection} ${roundUp(handleCorrectMetric(windSpeed))} km/hr`\n\n  windTitle.classList.add(\"generalInfo-title\")\n  windValue.classList.add(\"generalInfo-value\")\n\n  windContainer.classList.add(\"generalInfo\")\n\n  windContainer.append(windTitle, windValue)\n\n  const { feels_like: feelsLike } = weatherObj.hourly[0]\n\n  const feelsLikeContainer = document.createElement(\"div\")\n  const feelsLikeTitle = document.createElement(\"div\")\n  const feelsLikeValue = document.createElement(\"div\")\n\n  feelsLikeTitle.textContent = \"FEELS LIKE\"\n  feelsLikeValue.textContent = `${roundUp(feelsLike)}°`\n\n  feelsLikeTitle.classList.add(\"generalInfo-title\")\n  feelsLikeValue.classList.add(\"generalInfo-value\")\n\n  feelsLikeContainer.classList.add(\"generalInfo\")\n\n  feelsLikeContainer.append(feelsLikeTitle, feelsLikeValue)\n\n  const { rain } = weatherObj.daily[0]\n\n  const precipitationContainer = document.createElement(\"div\")\n  const precipitationTitle = document.createElement(\"div\")\n  const precipitationValue = document.createElement(\"div\")\n\n  precipitationTitle.textContent = \"PRECIPITATION\"\n  precipitationValue.textContent = `${rain} mm/h`\n\n  if (rain === undefined) {\n    precipitationValue.textContent = 0\n  }\n\n  precipitationTitle.classList.add(\"generalInfo-title\")\n  precipitationValue.classList.add(\"generalInfo-value\")\n\n  precipitationContainer.classList.add(\"generalInfo\")\n\n  precipitationContainer.append(precipitationTitle, precipitationValue)\n\n  const { pressure } = weatherObj.hourly[0]\n\n  const pressureContainer = document.createElement(\"div\")\n  const pressureTitle = document.createElement(\"div\")\n  const pressureValue = document.createElement(\"div\")\n\n  pressureTitle.textContent = \"PRESSURE\"\n  pressureValue.textContent = `${pressure} hPa`\n\n  pressureTitle.classList.add(\"generalInfo-title\")\n  pressureValue.classList.add(\"generalInfo-value\")\n\n  pressureContainer.classList.add(\"generalInfo\")\n\n  pressureContainer.append(pressureTitle, pressureValue)\n\n  const { visibility } = weatherObj.hourly[0]\n\n  const visibilityContainer = document.createElement(\"div\")\n  const visibilityTitle = document.createElement(\"div\")\n  const visibilityValue = document.createElement(\"div\")\n\n  visibilityTitle.textContent = \"VISIBILITY\"\n  visibilityValue.textContent = `${convertMetersToKilometers(visibility)} km`\n\n  visibilityTitle.classList.add(\"generalInfo-title\")\n  visibilityValue.classList.add(\"generalInfo-value\")\n\n  visibilityContainer.classList.add(\"generalInfo\")\n\n  visibilityContainer.append(visibilityTitle, visibilityValue)\n\n  const { uvi } = weatherObj.hourly[0]\n\n  const uviIndexContainer = document.createElement(\"div\")\n  const uviIndexTitle = document.createElement(\"div\")\n  const uviIndexValue = document.createElement(\"div\")\n\n  uviIndexTitle.textContent = \"UVI INDEX\"\n  uviIndexValue.textContent = `${uvi}`\n\n  uviIndexTitle.classList.add(\"generalInfo-title\")\n  uviIndexValue.classList.add(\"generalInfo-value\")\n\n  uviIndexContainer.classList.add(\"generalInfo\")\n\n  uviIndexContainer.append(uviIndexTitle, uviIndexValue)\n\n  generalInfoContainer.append(\n    sunriseContainer,\n    sunsetContainer,\n    chanceOfRainContainer,\n    humidityContainer,\n    windContainer,\n    pressureContainer,\n    feelsLikeContainer,\n    precipitationContainer,\n    precipitationContainer,\n    visibilityContainer,\n    uviIndexContainer,\n  )\n\n  appendToContentWrapper(generalInfoContainer)\n}\n\n"],"names":["handleWeatherIcon","weatherImage","iconCode","iconDescription","src","setAttribute","toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","getHours","date","fromUnixTime","unixTime","convertPopToPercentage","unit","Math","floor","getDayFromUnixTimestamp","unix","day","getDay","getHoursAndMinutes","hours","minutes","getMinutes","length","roundUp","round","mediaQueryMin768","window","matchMedia","handleMediaQueryMin768","event","generalInfoContainer","document","querySelector","dailyForecastContainer","contentWrapper","matches","remove","insertBefore","appendChild","appendToMainDisplay","element","appendToContentWrapper","addEventListener","main","handleLoader","loader","classList","contains","add","async","handleCitySearch","city","content","clearContentWrapper","weatherContentWrapper","createElement","coordinatesObj","fetch","mode","then","res","ok","Error","status","statusText","json","lat","lon","name","catch","err","console","error","getCordinates","selectedMetric","metricForApi","weatherObj","metric","log","getWeather","mainDisplay","createMainDisplay","cityCoordinates","mainInfo","cityName","textContent","current","weather","cityWeather","temp","cityTemp","min","max","daily","cityHighAndLowContainer","cityHigh","cityLow","append","createMainInfo","arr24Hours","hourly","slice","hourlyForecastContainer","i","hourlyForecast","hour","rainChance","Image","temperature","dt","pop","icon","description","createHourlyForecast","descriptionValue","descriptionParagraph","createDescription","dailyForecastArr","dailyForecast","weatherIcon","highAndLowContainer","high","low","createDailyForecast","sunrise","sunset","sunriseContainer","sunriseTitle","sunriseValue","sunsetContainer","sunsetTitle","sunsetValue","chanceOfRainContainer","chanceOfRainTitle","chanceOfRainValue","humidity","humidityContainer","humidityTitle","humidityValue","wind_speed","windSpeed","wind_deg","windDeg","windContainer","windTitle","windValue","compassDirection","deg","directionsArr","directionName","degrees","findCompassDirection","convertMetersPerSecondToKhH","convertMilesPerHourToKhH","feels_like","feelsLike","feelsLikeContainer","feelsLikeTitle","feelsLikeValue","rain","precipitationContainer","precipitationTitle","precipitationValue","undefined","pressure","pressureContainer","pressureTitle","pressureValue","visibility","visibilityContainer","visibilityTitle","visibilityValue","convertMetersToKilometers","uvi","uviIndexContainer","uviIndexTitle","uviIndexValue","createGeneralInfo","celsiusMetric","fahrenheitMetric","e","searchValue","value","preventDefault"],"sourceRoot":""}