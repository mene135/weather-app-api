{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://basetemplate/./node_modules/date-fns/toDate.mjs","webpack://basetemplate/./node_modules/date-fns/fromUnixTime.mjs","webpack://basetemplate/./node_modules/date-fns/getHours.mjs","webpack://basetemplate/./node_modules/date-fns/getMinutes.mjs","webpack://basetemplate/./src/index.js","webpack://basetemplate/./node_modules/date-fns/getDay.mjs"],"sourcesContent":["/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport function getHours(date) {\n  const _date = toDate(date);\n  const hours = _date.getHours();\n  return hours;\n}\n\n// Fallback for modularized imports:\nexport default getHours;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nexport function getMinutes(date) {\n  const _date = toDate(date);\n  const minutes = _date.getMinutes();\n  return minutes;\n}\n\n// Fallback for modularized imports:\nexport default getMinutes;\n","import { fromUnixTime, getHours, getMinutes, getDay } from \"date-fns\"\n\nconst body = document.querySelector(\"body\")\n\n\nfunction getHourFromUnixTimestamp(unix) {\n  const date = fromUnixTime(unix)\n  const hour = getHours(date)\n\n  return hour\n}\n\nfunction roundUp(unit) {\n  return Math.round(unit)\n}\n\nfunction convertPopToPercentage(unit) {\n  return Math.floor(unit * 100)\n}\n\nfunction convertMetersPerSecondToKhH(unit) {\n  return 3.6 * unit\n}\n\nfunction convertMetersToKilometers(unit) {\n  return unit / 100\n}\n\nfunction getDayFromUnixTimestamp(unix) {\n  const date = fromUnixTime(unix)\n  const day = getDay(date)\n\n  if(day === 0) {\n    return \"Sunday\"\n  } \n\n  if(day === 1) {\n    return \"Monday\"\n  }\n\n  if(day === 2) {\n    return \"Tuesday\"\n  }\n  \n  if(day === 3) {\n    return \"Wednesday\"\n  }\n\n  if(day === 4) {\n    return \"Thursday\"\n  }\n\n  if(day === 5) {\n    return \"Friday\"\n  }\n\n  if(day === 6) {\n    return \"Saturday\"\n  }\n}\n\nfunction getWeatherIcon(iconCode) {\n  return `https://openweathermap.org/img/wn/${iconCode}@2x.png`\n}\n\nfunction clearHourlyForecastContainer() {\n  document.querySelector(\".hourlyForecastContainer\").remove()\n}\n\nfunction createHourlyForecast(arr) {\n  const hourlyForecastContainer = document.createElement(\"div\")\n\n  for (let i = 0; i < arr.length; i += 1) {\n    const hourlyForecast = document.createElement(\"div\")\n    const hour = document.createElement(\"div\")\n    const rainChance = document.createElement(\"div\")\n    const weatherImage = new Image()\n    const temperature = document.createElement(\"div\")\n\n    hourlyForecastContainer.classList.add(\"hourlyForecastContainer\")\n\n    hourlyForecast.classList.add(\"hourlyForecast\")\n    hour.classList.add(\"hourlyForecast-hour\")\n    rainChance.classList.add(\"hourlyForecast-rainChance\")\n    weatherImage.classList.add(\"hourlyForecast-weatherImage\")\n    temperature.classList.add(\"hourlyForecast-temperature\")\n\n    if (i === 0) {\n      hour.textContent = \"Now\"\n    } else {\n      hour.textContent = `${getHourFromUnixTimestamp(arr[i].dt)}`\n    }\n\n    if (arr[i].pop !== 0) {\n      rainChance.textContent = `${convertPopToPercentage(arr[i].pop)}%`\n    }\n\n    weatherImage.src = getWeatherIcon(arr[i].weather[0].icon)\n\n    temperature.textContent = `${roundUp(arr[i].temp)}°`\n\n    hourlyForecast.appendChild(hour)\n    hourlyForecast.appendChild(rainChance)\n    hourlyForecast.appendChild(weatherImage)\n    hourlyForecast.appendChild(temperature)\n\n    hourlyForecastContainer.appendChild(hourlyForecast)\n\n    const body = document.querySelector(\"body\")\n\n    body.appendChild(hourlyForecastContainer)\n  }\n}\n\nfunction getCordinates(city) {\n  return fetch(\n    `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=2815b9b71f4c4387bd5d1f3c3f298af6`,\n    { mode: \"cors\" },\n  )\n    .then((res) => {\n      console.log(res)\n      if (res.ok === false) {\n        throw new Error(\n          `getCordinates fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n        )\n      }\n      return res.json()\n    })\n    .then((res) => {\n      console.log(res)\n      const { lat, lon, name } = res[0]\n      console.log(lat, lon)\n      return { name, lat, lon }\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nfunction getWeather(lat, lon) {\n  return fetch(\n    `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=2815b9b71f4c4387bd5d1f3c3f298af6&units=metric`,\n    { mode: \"cors\" },\n  )\n    .then((res) => {\n      if (res.ok === false) {\n        throw new Error(\n          `getWeather fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n        )\n      }\n      return res.json()\n    })\n    .then((res) => {\n      console.log(res)\n      return res\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nasync function handleCitySearch(city) {\n  const result = await getCordinates(city)\n\n  const { name: cityName, lat, lon } = result\n\n  const weather = await getWeather(lat, lon)\n\n  const cityDisplay = document.querySelector(\".city\")\n  cityDisplay.textContent = cityName\n\n  const { main } = weather.current.weather[0]\n\n  const cityWeather = document.querySelector(\".city-weather\")\n  cityWeather.textContent = main\n\n  const { temp } = weather.current\n\n  const cityTemp = document.querySelector(\".city-temperature\")\n  cityTemp.textContent = `${roundUp(temp)}°`\n\n  const { min, max } = weather.daily[0].temp\n\n  const cityHigh = document.querySelector(\".city-high\")\n  const cityLow = document.querySelector(\".city-low\")\n\n  cityHigh.textContent = `H:${roundUp(max)}°`\n  cityLow.textContent = `L:${roundUp(min)}°`\n\n  const hourlyForecast24Arr = weather.hourly.slice(0, 24)\n\n  if (document.querySelector(\".hourlyForecastContainer\") !== null) {\n    clearHourlyForecastContainer()\n    createHourlyForecast(hourlyForecast24Arr)\n  } else {\n    createHourlyForecast(hourlyForecast24Arr)\n  }\n\n  createDescription(weather.daily[0])\n  createDailyForecast(weather.daily)\n  createGeneralInfo(weather)\n}\n\nfunction createDailyForecast(arr) {\n  const dailyForecastContainer = document.createElement(\"div\")\n\n  dailyForecastContainer.classList.add(\"dailyForecastContainer\")\n\n  for(let i = 1; i < arr.length; i += 1) {\n    const dailyForecast = document.createElement(\"div\")\n\n    const day = document.createElement(\"div\")\n    const weatherIcon = new Image()\n    const highAndLowContainer = document.createElement(\"div\")\n    const high = document.createElement(\"span\")\n    const low = document.createElement(\"span\")\n    \n    dailyForecast.classList.add(\"dailyForecast\")\n\n    day.classList.add(\"dailyForecast-day\")\n    weatherIcon.classList.add(\"dailyForecast-weatherImage\")\n    highAndLowContainer.classList.add(\"dailyForecast-highAndLowContainer\")\n    high.classList.add(\"dailyForecast-highAndLowContainer-high\")\n    low.classList.add(\"dailyForecast-highAndLowContainer-low\")\n\n    day.textContent = `${getDayFromUnixTimestamp(arr[i].dt)}`\n    weatherIcon.src = getWeatherIcon(arr[i].weather[0].icon)\n    high.textContent = `${roundUp(arr[i].temp.max)}°`\n    low.textContent = `${roundUp(arr[i].temp.min)}°`\n\n    highAndLowContainer.appendChild(high)\n    highAndLowContainer.appendChild(low)\n\n    dailyForecast.appendChild(day)\n    dailyForecast.appendChild(weatherIcon)\n    dailyForecast.appendChild(highAndLowContainer)\n\n    dailyForecastContainer.appendChild(dailyForecast)\n  }\n\n  const body = document.querySelector(\"body\")\n\n  body.appendChild(dailyForecastContainer)\n}\n\nfunction getHoursAndMinutes(unit) {\n  let result1 = fromUnixTime(unit)\n  let hours = getHours(result1)\n  let minutes = getMinutes(result1)\n\n  if(minutes.toString(10).length === 1) {\n    minutes = `0${minutes}`\n  }\n\n  return `${hours} : ${minutes}`\n}\n\nfunction createDescription(obj) {\n  const { max , min } = obj.temp\n  const descriptionValue = obj.weather[0].description\n\n  const description = document.createElement(\"div\")\n  const descriptionParagraph = document.createElement(\"p\")\n\n  description.classList.add(\"todaysDescription\")\n  descriptionParagraph.classList.add(\"todaysDescription-paragraph\")\n\n  descriptionParagraph.textContent = `Today: ${descriptionValue}. The high will be ${roundUp(max)}°. The low will be ${roundUp(min)}°.`\n\n  description.appendChild(descriptionParagraph)\n  const body = document.querySelector(\"body\");\n  body.appendChild(description)\n}\n\nfunction createGeneralInfo(obj) {\n  const generalInformation = document.createElement(\"div\")\n\n  generalInformation.classList.add(\"generalInformation\")\n\n  const { sunrise, sunset } = obj.daily[0]\n\n  const sunriseContainer = document.createElement(\"div\")\n  const sunriseTitle = document.createElement(\"div\")\n  const sunriseValue = document.createElement(\"div\")\n\n  sunriseTitle.textContent = \"SUNRISE\"\n  sunriseValue.textContent = `${getHoursAndMinutes(sunrise)}`\n\n  const sunsetContainer = document.createElement(\"div\")\n  const sunsetTitle = document.createElement(\"div\")\n  const sunsetValue = document.createElement(\"div\")\n\n  sunsetTitle.textContent = \"SUNSET\"\n  sunsetValue.textContent = `${getHoursAndMinutes(sunset)}`\n\n  sunriseTitle.classList.add(\"generalInformation-container-title\")\n  sunriseValue.classList.add(\"generalInformation-container-value\")\n\n  sunsetTitle.classList.add(\"generalInformation-container-title\")\n  sunsetValue.classList.add(\"generalInformation-container-value\")\n\n  sunriseContainer.classList.add(\"generalInformation-container\")\n  sunsetContainer.classList.add(\"generalInformation-container\")\n\n  sunriseContainer.append(sunriseTitle, sunriseValue)\n  sunsetContainer.append(sunsetTitle, sunsetValue)\n\n  const { pop } = obj.hourly[0]\n\n  const chanceOfRainContainer = document.createElement(\"div\")\n  const chanceOfRainTitle = document.createElement(\"div\")\n  const chanceOfRainValue = document.createElement(\"div\")\n\n  chanceOfRainTitle.textContent = \"CHANCE OF RAIN\"\n  chanceOfRainValue.textContent = `${convertPopToPercentage(pop)}%`\n\n  chanceOfRainTitle.classList.add(\"generalInformation-container-title\")\n  chanceOfRainValue.classList.add(\"generalInformation-container-value\")\n\n  chanceOfRainContainer.classList.add(\"generalInformation-container\")\n\n  chanceOfRainContainer.append(chanceOfRainTitle, chanceOfRainValue)\n\n  const { humidity } = obj.hourly[0]\n\n  const humidityContainer = document.createElement(\"div\")\n  const humidityTitle = document.createElement(\"div\")\n  const humidityValue = document.createElement(\"div\")\n\n  humidityTitle.textContent = \"HUMIDITY\"\n  humidityValue.textContent = `${humidity}%`\n\n  humidityTitle.classList.add(\"generalInformation-container-title\")\n  humidityValue.classList.add(\"generalInformation-container-value\")\n\n  humidityContainer.classList.add(\"generalInformation-container\")\n\n  humidityContainer.append(humidityTitle, humidityValue)\n\n  const { wind_speed, wind_deg } = obj.hourly[0]\n\n  const windContainer = document.createElement(\"div\")\n  const windTitle = document.createElement(\"div\")\n  const windValue = document.createElement(\"div\")\n\n  windTitle.textContent = \"WIND\"\n  windValue.textContent = `${findCompassDirection(wind_deg)} ${roundUp(convertMetersPerSecondToKhH(wind_speed))} km/hr`\n\n  windTitle.classList.add(\"generalInformation-container-title\")\n  windValue.classList.add(\"generalInformation-container-value\")\n\n  windContainer.classList.add(\"generalInformation-container\")\n\n  windContainer.append(windTitle, windValue)\n\n  const { feels_like } = obj.hourly[0]\n\n  const feelsLikeContainer = document.createElement(\"div\")\n  const feelsLikeTitle = document.createElement(\"div\")\n  const feelsLikeValue = document.createElement(\"div\")\n\n  feelsLikeTitle.textContent = \"FEELS LIKE\"\n  feelsLikeValue.textContent = `${feels_like}°`\n\n  feelsLikeTitle.classList.add(\"generalInformation-container-title\")\n  feelsLikeValue.classList.add(\"generalInformation-container-value\")\n\n  feelsLikeContainer.classList.add(\"generalInformation-container\")\n\n  feelsLikeContainer.append(feelsLikeTitle, feelsLikeValue)\n\n  const { rain } = obj.daily[0]\n\n  const precipitationContainer = document.createElement(\"div\")\n  const precipitationTitle = document.createElement(\"div\")\n  const precipitationValue = document.createElement(\"div\")\n\n  precipitationTitle.textContent = \"PRECIPITATION\"\n  precipitationValue.textContent = `${rain} mm/h`\n\n  if(rain === undefined) {\n    precipitationValue.textContent = 0;\n  }\n\n  precipitationTitle.classList.add(\"generalInformation-container-title\")\n  precipitationValue.classList.add(\"generalInformation-container-value\")\n\n  precipitationContainer.classList.add(\"generalInformation-container\")\n\n  precipitationContainer.append(precipitationTitle, precipitationValue)\n\n  const { pressure } = obj.hourly[0]\n\n  const pressureContainer = document.createElement(\"div\")\n  const pressureTitle = document.createElement(\"div\")\n  const pressureValue = document.createElement(\"div\")\n\n  pressureTitle.textContent = \"PRESSURE\"\n  pressureValue.textContent = `${pressure} hPa`\n\n  pressureTitle.classList.add(\"generalInformation-container-title\")\n  pressureValue.classList.add(\"generalInformation-container-value\")\n\n  pressureContainer.classList.add(\"generalInformation-container\")\n\n  pressureContainer.append(pressureTitle, pressureValue)\n\n  const { visibility } = obj.hourly[0]\n\n  const visibilityContainer = document.createElement(\"div\")\n  const visibilityTitle = document.createElement(\"div\")\n  const visibilityValue = document.createElement(\"div\")\n\n  visibilityTitle.textContent = \"VISIBILITY\"\n  visibilityValue.textContent = `${convertMetersToKilometers(visibility)} km`\n\n  visibilityTitle.classList.add(\"generalInformation-container-title\")\n  visibilityValue.classList.add(\"generalInformation-container-value\")\n\n  visibilityContainer.classList.add(\"generalInformation-container\")\n\n  visibilityContainer.append(visibilityTitle, visibilityValue)\n\n  const { uvi } = obj.hourly[0]\n\n  const uviIndexContainer = document.createElement(\"div\")\n  const uviIndexTitle = document.createElement(\"div\")\n  const uviIndexValue = document.createElement(\"div\")\n\n  uviIndexTitle.textContent = \"UVI INDEX\" \n  uviIndexValue.textContent = `${uvi}`\n\n  uviIndexTitle.classList.add(\"generalInformation-container-title\")\n  uviIndexValue.classList.add(\"generalInformation-container-value\")\n\n  uviIndexContainer.classList.add(\"generalInformation-container\")\n\n  uviIndexContainer.append(uviIndexTitle, uviIndexValue)\n\n  generalInformation.append(sunriseContainer, sunsetContainer, chanceOfRainContainer, humidityContainer, windContainer, feelsLikeContainer, precipitationContainer, precipitationContainer, visibilityContainer, uviIndexContainer)\n\n  body.appendChild(generalInformation)\n}\n\nconst searchBtn = document.querySelector(\".search-btn\")\n\nsearchBtn.addEventListener(\"click\", (e) => {\n  const searchValue = document.querySelector(\".search-input\").value\n  const searchInput = document.querySelector(\".search-input\")\n  searchInput.value = \"\"\n\n  handleCitySearch(searchValue)\n  e.preventDefault()\n})\n\nfunction findCompassDirection(deg) {\n  let directionsArr = [{directionName: \"N\", degrees: 0}, {directionName: \"NNE\", degrees: 22.5}, {directionName: \"NE\", degrees: 45}, {directionName: \"ENE\", degrees: 67.5}, {directionName: \"E\", degrees: 90}, {directionName: \"ESE\", degrees: 112.5}, {directionName: \"SE\", degrees: 135}, {directionName: \"SSE\", degrees: 157.5}, {directionName: \"S\", degrees: 180}, {directionName: \"SSW\", degrees: 202.5}, {directionName: \"SW\", degrees: 225}, {directionName: \"WSW\", degrees: 247.5}, {directionName: \"W\", degrees: 270}, {directionName: \"WNW\", degrees: 292.5}, {directionName: \"NW\", degrees: 315}, {directionName: \"NNW\", degrees: 337.5}, {directionName: \"N\", degrees: 360} ]\n\n\n  for(let i = 0; i < directionsArr.length; i += 1) {\n    if(directionsArr[i].degrees === deg) {\n      return directionsArr[i].directionName\n    } \n\n    if(directionsArr[i].degrees > deg) {\n      let prevMinusDeg = deg - directionsArr[i - 1].degrees \n      let currMinusDeg = directionsArr[i].degrees - deg\n\n      console.log(prevMinusDeg)\n      console.log(currMinusDeg)\n\n      if(prevMinusDeg < currMinusDeg) {\n        return directionsArr[i - 1].directionName\n      } else {\n        return directionsArr[i].directionName\n      }\n    }\n  }\n}\n\nconsole.log(findCompassDirection(290))\n\n\n\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date) {\n  const _date = toDate(date);\n  const day = _date.getDay();\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n"],"names":["toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","fromUnixTime","unixTime","getHours","date","body","document","querySelector","roundUp","unit","Math","round","convertPopToPercentage","floor","getDayFromUnixTimestamp","unix","day","getDay","getWeatherIcon","iconCode","createHourlyForecast","arr","hourlyForecastContainer","createElement","i","length","hourlyForecast","hour","rainChance","weatherImage","Image","temperature","classList","add","textContent","dt","pop","src","weather","icon","temp","appendChild","getHoursAndMinutes","result1","hours","minutes","getMinutes","findCompassDirection","deg","directionsArr","directionName","degrees","prevMinusDeg","currMinusDeg","console","log","addEventListener","e","searchValue","value","async","city","result","fetch","mode","then","res","ok","Error","status","statusText","json","lat","lon","name","catch","err","error","getCordinates","cityName","getWeather","main","current","min","max","daily","cityHigh","cityLow","hourlyForecast24Arr","hourly","slice","remove","obj","descriptionValue","description","descriptionParagraph","createDescription","dailyForecastContainer","dailyForecast","weatherIcon","highAndLowContainer","high","low","createDailyForecast","generalInformation","sunrise","sunset","sunriseContainer","sunriseTitle","sunriseValue","sunsetContainer","sunsetTitle","sunsetValue","append","chanceOfRainContainer","chanceOfRainTitle","chanceOfRainValue","humidity","humidityContainer","humidityTitle","humidityValue","wind_speed","wind_deg","windContainer","windTitle","windValue","feels_like","feelsLikeContainer","feelsLikeTitle","feelsLikeValue","rain","precipitationContainer","precipitationTitle","precipitationValue","undefined","pressure","pressureContainer","pressureTitle","pressureValue","visibility","visibilityContainer","visibilityTitle","visibilityValue","convertMetersToKilometers","uvi","uviIndexContainer","uviIndexTitle","uviIndexValue","createGeneralInfo","handleCitySearch","preventDefault"],"sourceRoot":""}