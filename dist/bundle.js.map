{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://basetemplate/./src/apiFunctions.js","webpack://basetemplate/./node_modules/date-fns/toDate.mjs","webpack://basetemplate/./node_modules/date-fns/getHours.mjs","webpack://basetemplate/./node_modules/date-fns/fromUnixTime.mjs","webpack://basetemplate/./src/helperFunctions.js","webpack://basetemplate/./node_modules/date-fns/getDay.mjs","webpack://basetemplate/./node_modules/date-fns/getMinutes.mjs","webpack://basetemplate/./src/index.js","webpack://basetemplate/./src/builderFunctions.js"],"sourcesContent":["\r\n\r\nexport function getCordinates(city) {\r\n  return fetch(\r\n    `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=2815b9b71f4c4387bd5d1f3c3f298af6`,\r\n    { mode: \"cors\" },\r\n  )\r\n    .then((res) => {\r\n      if (res.ok === false) {\r\n        throw new Error(\r\n          `getCordinates fetch operation unsuccessful: ${res.status} ${res.statusText}`,\r\n        )\r\n      }\r\n      return res.json()\r\n    })\r\n    .then((res) => {\r\n      if(res.length === 0) {\r\n        throw new Error(\r\n          'City not found'\r\n        )\r\n      }\r\n\r\n      const {lat, lon, name } = res[0];\r\n\r\n      return { name, lat, lon }\r\n    })\r\n    .catch((err) => {\r\n      if(err.message === \"Failed to fetch\") {\r\n        throw new Error (\r\n          'Network error'\r\n        )\r\n      }\r\n      throw err\r\n    })\r\n}\r\n\r\nexport function getWeather(lat, lon, metric) {\r\n  return fetch(\r\n    `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=2815b9b71f4c4387bd5d1f3c3f298af6&units=${metric}`,\r\n    { mode: \"cors\" },\r\n  )\r\n    .then((res) => {\r\n      if (res.ok === false) {\r\n        throw new Error(\r\n          `getWeather fetch operation unsuccessful: ${res.status} ${res.statusText}`,\r\n        )\r\n      }\r\n      return res.json()\r\n    })\r\n    .then((res) => {\r\n      console.log(res)\r\n      return res\r\n    })\r\n    .catch((err) => {\r\n      console.error(err)\r\n    })\r\n}\r\n\r\nexport function handleWeatherIcon(weatherImage, iconCode, iconDescription) {\r\n  weatherImage.src = `https://openweathermap.org/img/wn/${iconCode}@2x.png`\r\n  weatherImage.setAttribute(\"alt\", `${iconDescription}`)\r\n  weatherImage.setAttribute(\"title\", `${iconDescription}`)\r\n\r\n}\r\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport function getHours(date) {\n  const _date = toDate(date);\n  const hours = _date.getHours();\n  return hours;\n}\n\n// Fallback for modularized imports:\nexport default getHours;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import { fromUnixTime, getHours, getMinutes, getDay } from \"date-fns\"\r\n\r\nexport function convertPopToPercentage(unit) {\r\n  return Math.floor(unit * 100)\r\n}\r\n\r\nfunction convertMetersPerSecondToKhH(unit) {\r\n  return unit * 3.6\r\n}\r\n\r\nfunction convertMilesPerHourToKhH(unit) {\r\n  return unit * 1.609344\r\n}\r\n\r\nexport function convertMetersToKilometers(unit) {\r\n  return unit / 100\r\n}\r\n\r\nexport function getHourFromUnixTimestamp(unix) {\r\n  return getHours(fromUnixTime(unix))\r\n}\r\n\r\nexport function handleCorrectMetric(unit) {\r\n  const selected = document.querySelector(\".selectedMetric\")\r\n\r\n  if (selected.classList.contains(\"metric-celsius\")) {\r\n    return convertMetersPerSecondToKhH(unit)\r\n  }\r\n\r\n  return convertMilesPerHourToKhH(unit)\r\n}\r\n\r\nexport function getDayFromUnixTimestamp(unix) {\r\n  const day = getDay(fromUnixTime(unix))\r\n\r\n  if (day === 0) {\r\n    return \"Sunday\"\r\n  }\r\n\r\n  if (day === 1) {\r\n    return \"Monday\"\r\n  }\r\n\r\n  if (day === 2) {\r\n    return \"Tuesday\"\r\n  }\r\n\r\n  if (day === 3) {\r\n    return \"Wednesday\"\r\n  }\r\n\r\n  if (day === 4) {\r\n    return \"Thursday\"\r\n  }\r\n\r\n  if (day === 5) {\r\n    return \"Friday\"\r\n  }\r\n\r\n  if (day === 6) {\r\n    return \"Saturday\"\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport function getHoursAndMinutes(unit) {\r\n  const date = fromUnixTime(unit)\r\n  const hours = getHours(date)\r\n  let minutes = getMinutes(date)\r\n\r\n  if (minutes.toString(10).length === 1) {\r\n    minutes = `0${minutes}`\r\n  }\r\n\r\n  return `${hours} : ${minutes}`\r\n}\r\n\r\nexport function roundUp(unit) {\r\n  return Math.round(unit)\r\n}\r\n\r\nexport function findCompassDirection(deg) {\r\n  const directionsArr = [\r\n    { directionName: \"N\", degrees: 0 },\r\n    { directionName: \"NNE\", degrees: 22.5 },\r\n    { directionName: \"NE\", degrees: 45 },\r\n    { directionName: \"ENE\", degrees: 67.5 },\r\n    { directionName: \"E\", degrees: 90 },\r\n    { directionName: \"ESE\", degrees: 112.5 },\r\n    { directionName: \"SE\", degrees: 135 },\r\n    { directionName: \"SSE\", degrees: 157.5 },\r\n    { directionName: \"S\", degrees: 180 },\r\n    { directionName: \"SSW\", degrees: 202.5 },\r\n    { directionName: \"SW\", degrees: 225 },\r\n    { directionName: \"WSW\", degrees: 247.5 },\r\n    { directionName: \"W\", degrees: 270 },\r\n    { directionName: \"WNW\", degrees: 292.5 },\r\n    { directionName: \"NW\", degrees: 315 },\r\n    { directionName: \"NNW\", degrees: 337.5 },\r\n    { directionName: \"N\", degrees: 360 },\r\n  ]\r\n\r\n  for (let i = 0; i < directionsArr.length; i += 1) {\r\n    if (directionsArr[i].degrees === deg) {\r\n      return directionsArr[i].directionName\r\n    }\r\n\r\n    if (directionsArr[i].degrees > deg) {\r\n      const prevMinusDeg = deg - directionsArr[i - 1].degrees\r\n      const currMinusDeg = directionsArr[i].degrees - deg\r\n\r\n      if (prevMinusDeg < currMinusDeg) {\r\n        return directionsArr[i - 1].directionName\r\n      }\r\n\r\n      return directionsArr[i].directionName\r\n    }\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport function clearContentWrapper() {\r\n  const content = document.querySelector(\".weather-content-wrapper\")\r\n\r\n  if (content) {\r\n    content.remove()\r\n  }\r\n}\r\n\r\nexport const mediaQueryMin768 = window.matchMedia(\"(min-width: 768px\")\r\n\r\nexport function handleMediaQueryMin768(event) {\r\n  const generalInfoContainer = document.querySelector(\".generalInfo-container\")\r\n  const dailyForecastContainer = document.querySelector(\r\n    \".dailyForecastContainer\",\r\n  )\r\n  const contentWrapper = document.querySelector(\".weather-content-wrapper\")\r\n\r\n  if (event.matches && generalInfoContainer) {\r\n    generalInfoContainer.remove()\r\n    contentWrapper.insertBefore(generalInfoContainer, dailyForecastContainer)\r\n  } else if(generalInfoContainer) {\r\n    generalInfoContainer.remove()\r\n    contentWrapper.appendChild(generalInfoContainer)\r\n  }\r\n}\r\n\r\nmediaQueryMin768.addEventListener(\"change\", handleMediaQueryMin768)\r\n\r\nexport function appendToMainDisplay(element) {\r\n  document.querySelector(\".l-mainDisplay\").appendChild(element)\r\n}\r\n\r\nexport function appendToContentWrapper(element) {\r\n  document.querySelector(\".weather-content-wrapper\").appendChild(element)\r\n}\r\n\r\n\r\nexport function handleSearchError(err) {\r\n  document.querySelector(\".toast-message\").textContent = `${err}`\r\n  document.querySelector(\".toast\").classList.remove(\"toast-isHidden\")\r\n}\r\n\r\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date) {\n  const _date = toDate(date);\n  const day = _date.getDay();\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nexport function getMinutes(date) {\n  const _date = toDate(date);\n  const minutes = _date.getMinutes();\n  return minutes;\n}\n\n// Fallback for modularized imports:\nexport default getMinutes;\n","import { getCordinates, getWeather } from \"./apiFunctions\"\r\nimport {\r\n  createMainDisplay,\r\n  createMainInfo,\r\n  createHourlyForecast,\r\n  createDescription,\r\n  createDailyForecast,\r\n  createGeneralInfo,\r\n} from \"./builderFunctions\"\r\nimport {\r\n  clearContentWrapper,\r\n  mediaQueryMin768,\r\n  handleMediaQueryMin768,\r\n  handleSearchError\r\n} from \"./helperFunctions\"\r\n\r\nconst main = document.querySelector(\"main\")\r\n\r\nfunction handleLoader() {\r\n  const loader = document.querySelector(\".loader\")\r\n\r\n  if(loader.classList.contains(\"loader-isHidden\")) {\r\n    loader.classList.remove(\"loader-isHidden\")\r\n  } else if (loader.classList.contains(\"loader-isHidden\") === false) {\r\n    loader.classList.add(\"loader-isHidden\")  \r\n  }\r\n}\r\n\r\nasync function handleCitySearch(city) {\r\n  clearContentWrapper()\r\n  handleLoader()\r\n  document.querySelector(\".toast\").classList.add('toast-isHidden')\r\n\r\n  const weatherContentWrapper = document.createElement(\"div\")\r\n  weatherContentWrapper.classList.add(\"weather-content-wrapper\")\r\n  main.appendChild(weatherContentWrapper)\r\n  \r\n  let coordinatesObj\r\n\r\n  try {\r\n     coordinatesObj = await getCordinates(city)\r\n     document.querySelector(\".toast\").classList.add(\"toast-isHidden\")\r\n  } catch(err) {\r\n    handleLoader()\r\n    handleSearchError(err);\r\n    return\r\n  }\r\n  \r\n\r\n  const { lat, lon } = coordinatesObj\r\n\r\n  const selectedMetric = document.querySelector(\".selectedMetric\")\r\n\r\n  let metricForApi\r\n\r\n  if (selectedMetric.classList.contains(\"metric-celsius\")) {\r\n    metricForApi = \"metric\"\r\n  }\r\n\r\n  if (selectedMetric.classList.contains(\"metric-fahrenheit\")) {\r\n    metricForApi = \"imperial\"\r\n  }\r\n\r\n  const weatherObj = await getWeather(lat, lon, metricForApi)\r\n  handleLoader()\r\n\r\n  createMainDisplay()\r\n  createMainInfo(coordinatesObj, weatherObj)\r\n  createHourlyForecast(weatherObj)\r\n  createDescription(weatherObj.daily[0])\r\n  createDailyForecast(weatherObj.daily)\r\n  createGeneralInfo(weatherObj)\r\n\r\n  handleMediaQueryMin768(mediaQueryMin768)\r\n}\r\n\r\nconst toggleMetricBtn = document.querySelector(\".toggleMetric\")\r\n\r\ntoggleMetricBtn.addEventListener(\"click\", () => {\r\n  const celsiusMetric = document.querySelector(\".metric-celsius\")\r\n  const fahrenheitMetric = document.querySelector(\".metric-fahrenheit\")\r\n\r\n  if (celsiusMetric.classList.contains(\"selectedMetric\")) {\r\n    celsiusMetric.classList.remove(\"selectedMetric\")\r\n    fahrenheitMetric.classList.add(\"selectedMetric\")\r\n    toggleMetricBtn.setAttribute(\"aria-label\", \"Toggle metric used, currently selected metric is fahrenheit, other option is celsius\")\r\n  } else {\r\n    celsiusMetric.classList.add(\"selectedMetric\")\r\n    fahrenheitMetric.classList.remove(\"selectedMetric\")\r\n    toggleMetricBtn.setAttribute(\"aria-label\", \"Toggle metric used, currently selected metric is celsius, other option is fahrenheit\")\r\n  }\r\n\r\n  if (document.querySelector(\".weather-content-wrapper\")) {\r\n    const city = document.querySelector(\".city\").textContent\r\n\r\n    handleCitySearch(city)\r\n  }\r\n})\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\")\r\n\r\nsearchBtn.addEventListener(\"click\", (e) => {\r\n  const searchValue = document.querySelector(\".search-input\").value\r\n  const searchInput = document.querySelector(\".search-input\")\r\n  searchInput.value = \"\"\r\n\r\n  handleCitySearch(searchValue)\r\n  e.preventDefault()\r\n})\r\n\r\n\r\n","import { handleWeatherIcon } from \"./apiFunctions\"\r\nimport {\r\n  roundUp,\r\n  convertMetersToKilometers,\r\n  convertPopToPercentage,\r\n  handleCorrectMetric,\r\n  getDayFromUnixTimestamp,\r\n  getHourFromUnixTimestamp,\r\n  getHoursAndMinutes,\r\n  findCompassDirection,\r\n  appendToMainDisplay,\r\n  appendToContentWrapper,\r\n  handleSearchError\r\n} from \"./helperFunctions\"\r\n\r\nexport function createMainDisplay() {\r\n  const mainDisplay = document.createElement(\"div\")\r\n  mainDisplay.classList.add(\"l-mainDisplay\")\r\n\r\n  const contentWrapper = document.querySelector(\".weather-content-wrapper\")\r\n  contentWrapper.appendChild(mainDisplay)\r\n}\r\n\r\nexport function createMainInfo(cityCoordinates, weatherObj) {\r\n  const mainInfo = document.createElement(\"div\")\r\n  mainInfo.classList.add(\"mainInfo\")\r\n\r\n  const { name: cityName } = cityCoordinates\r\n\r\n  const city = document.createElement(\"div\")\r\n  city.textContent = `${cityName}`\r\n  city.classList.add(\"city\")\r\n\r\n  const { main } = weatherObj.current.weather[0]\r\n\r\n  const cityWeather = document.createElement(\"div\")\r\n  cityWeather.textContent = `${main}`\r\n  cityWeather.classList.add(\"city-weather\")\r\n\r\n  const { temp } = weatherObj.current\r\n\r\n  const cityTemp = document.createElement(\"div\")\r\n  cityTemp.textContent = `${roundUp(temp)}°`\r\n  cityTemp.classList.add(\"city-temperature\")\r\n\r\n  const { min, max } = weatherObj.daily[0].temp\r\n\r\n  const cityHighAndLowContainer = document.createElement(\"div\")\r\n  const cityHigh = document.createElement(\"div\")\r\n  const cityLow = document.createElement(\"div\")\r\n\r\n  cityHigh.textContent = `H:${roundUp(max)}°`\r\n  cityLow.textContent = `L:${roundUp(min)}°`\r\n\r\n  cityHigh.classList.add(\"city-highAndLowTemp-high\")\r\n  cityLow.classList.add(\"city-highAndLowTemp-low\")\r\n  cityHighAndLowContainer.classList.add(\"city-highAndLowTemp\")\r\n\r\n  cityHighAndLowContainer.append(cityHigh, cityLow)\r\n\r\n  mainInfo.append(city, cityWeather, cityTemp, cityHighAndLowContainer)\r\n\r\n  appendToMainDisplay(mainInfo)\r\n}\r\n\r\nexport function createHourlyForecast(weatherObj) {\r\n  const arr24Hours = weatherObj.hourly.slice(0, 24)\r\n\r\n  const hourlyForecastContainer = document.createElement(\"div\")\r\n  hourlyForecastContainer.classList.add(\"hourlyForecastContainer\")\r\n\r\n  for (let i = 0; i < arr24Hours.length; i += 1) {\r\n    const hourlyForecast = document.createElement(\"div\")\r\n    const hour = document.createElement(\"div\")\r\n    const rainChance = document.createElement(\"div\")\r\n    const weatherImage = new Image()\r\n    const temperature = document.createElement(\"div\")\r\n\r\n    hourlyForecast.classList.add(\"hourlyForecast\")\r\n    hour.classList.add(\"hourlyForecast-hour\")\r\n    rainChance.classList.add(\"hourlyForecast-rainChance\")\r\n    weatherImage.classList.add(\"hourlyForecast-weatherImage\")\r\n    temperature.classList.add(\"hourlyForecast-temperature\")\r\n\r\n    if (i === 0) {\r\n      hour.textContent = \"Now\"\r\n    } else {\r\n      hour.textContent = `${getHourFromUnixTimestamp(arr24Hours[i].dt)}`\r\n    }\r\n\r\n    if (arr24Hours[i].pop !== 0) {\r\n      rainChance.textContent = `${convertPopToPercentage(arr24Hours[i].pop)}%`\r\n    }\r\n\r\n    handleWeatherIcon(weatherImage, arr24Hours[i].weather[0].icon, arr24Hours[i].weather[0].description)\r\n\r\n    temperature.textContent = `${roundUp(arr24Hours[i].temp)}°`\r\n\r\n    hourlyForecast.append(hour, rainChance, weatherImage, temperature)\r\n    hourlyForecastContainer.appendChild(hourlyForecast)\r\n  }\r\n\r\n  appendToMainDisplay(hourlyForecastContainer)\r\n}\r\n\r\nexport function createDescription(weatherObj) {\r\n  const { max, min } = weatherObj.temp\r\n  const descriptionValue = weatherObj.weather[0].description\r\n\r\n  const description = document.createElement(\"div\")\r\n  const descriptionParagraph = document.createElement(\"p\")\r\n\r\n  description.classList.add(\"todaysDescription\")\r\n  descriptionParagraph.classList.add(\"todaysDescription-paragraph\")\r\n\r\n  descriptionParagraph.textContent = `Today: ${descriptionValue}. The high will be ${roundUp(max)}°. The low will be ${roundUp(min)}°.`\r\n\r\n  description.appendChild(descriptionParagraph)\r\n\r\n  appendToMainDisplay(description)\r\n}\r\n\r\nexport function createDailyForecast(dailyForecastArr) {\r\n  const dailyForecastContainer = document.createElement(\"div\")\r\n\r\n  dailyForecastContainer.classList.add(\"dailyForecastContainer\")\r\n\r\n  for (let i = 1; i < dailyForecastArr.length; i += 1) {\r\n    const dailyForecast = document.createElement(\"div\")\r\n\r\n    const day = document.createElement(\"div\")\r\n    const weatherIcon = new Image()\r\n    const highAndLowContainer = document.createElement(\"div\")\r\n    const high = document.createElement(\"span\")\r\n    const low = document.createElement(\"span\")\r\n\r\n    dailyForecast.classList.add(\"dailyForecast\")\r\n\r\n    day.classList.add(\"dailyForecast-day\")\r\n    weatherIcon.classList.add(\"dailyForecast-weatherImage\")\r\n    highAndLowContainer.classList.add(\"dailyForecast-highAndLowContainer\")\r\n    high.classList.add(\"dailyForecast-highAndLowContainer-high\")\r\n    low.classList.add(\"dailyForecast-highAndLowContainer-low\")\r\n\r\n    day.textContent = `${getDayFromUnixTimestamp(dailyForecastArr[i].dt)}`\r\n    handleWeatherIcon(weatherIcon, dailyForecastArr[i].weather[0].icon, dailyForecastArr[i].weather[0].description)\r\n    high.textContent = `${roundUp(dailyForecastArr[i].temp.max)}°`\r\n    low.textContent = `${roundUp(dailyForecastArr[i].temp.min)}°`\r\n\r\n    highAndLowContainer.appendChild(high)\r\n    highAndLowContainer.appendChild(low)\r\n\r\n    dailyForecast.appendChild(day)\r\n    dailyForecast.appendChild(weatherIcon)\r\n    dailyForecast.appendChild(highAndLowContainer)\r\n\r\n    dailyForecastContainer.appendChild(dailyForecast)\r\n  }\r\n\r\n  appendToContentWrapper(dailyForecastContainer)\r\n}\r\n\r\nexport function createGeneralInfo(weatherObj) {\r\n  const generalInfoContainer = document.createElement(\"div\")\r\n\r\n  generalInfoContainer.classList.add(\"generalInfo-container\")\r\n\r\n  const { sunrise, sunset } = weatherObj.daily[0]\r\n\r\n  const sunriseContainer = document.createElement(\"div\")\r\n  const sunriseTitle = document.createElement(\"div\")\r\n  const sunriseValue = document.createElement(\"div\")\r\n\r\n  sunriseTitle.textContent = \"SUNRISE\"\r\n  sunriseValue.textContent = `${getHoursAndMinutes(sunrise)}`\r\n\r\n  const sunsetContainer = document.createElement(\"div\")\r\n  const sunsetTitle = document.createElement(\"div\")\r\n  const sunsetValue = document.createElement(\"div\")\r\n\r\n  sunsetTitle.textContent = \"SUNSET\"\r\n  sunsetValue.textContent = `${getHoursAndMinutes(sunset)}`\r\n\r\n  sunriseTitle.classList.add(\"generalInfo-title\")\r\n  sunriseValue.classList.add(\"generalInfo-value\")\r\n\r\n  sunsetTitle.classList.add(\"generalInfo-title\")\r\n  sunsetValue.classList.add(\"generalInfo-value\")\r\n\r\n  sunriseContainer.classList.add(\"generalInfo\")\r\n  sunsetContainer.classList.add(\"generalInfo\")\r\n\r\n  sunriseContainer.append(sunriseTitle, sunriseValue)\r\n  sunsetContainer.append(sunsetTitle, sunsetValue)\r\n\r\n  const { pop } = weatherObj.hourly[0]\r\n\r\n  const chanceOfRainContainer = document.createElement(\"div\")\r\n  const chanceOfRainTitle = document.createElement(\"div\")\r\n  const chanceOfRainValue = document.createElement(\"div\")\r\n\r\n  chanceOfRainTitle.textContent = \"CHANCE OF RAIN\"\r\n  chanceOfRainValue.textContent = `${convertPopToPercentage(pop)}%`\r\n\r\n  chanceOfRainTitle.classList.add(\"generalInfo-title\")\r\n  chanceOfRainValue.classList.add(\"generalInfo-value\")\r\n\r\n  chanceOfRainContainer.classList.add(\"generalInfo\")\r\n\r\n  chanceOfRainContainer.append(chanceOfRainTitle, chanceOfRainValue)\r\n\r\n  const { humidity } = weatherObj.hourly[0]\r\n\r\n  const humidityContainer = document.createElement(\"div\")\r\n  const humidityTitle = document.createElement(\"div\")\r\n  const humidityValue = document.createElement(\"div\")\r\n\r\n  humidityTitle.textContent = \"HUMIDITY\"\r\n  humidityValue.textContent = `${humidity}%`\r\n\r\n  humidityTitle.classList.add(\"generalInfo-title\")\r\n  humidityValue.classList.add(\"generalInfo-value\")\r\n\r\n  humidityContainer.classList.add(\"generalInfo\")\r\n\r\n  humidityContainer.append(humidityTitle, humidityValue)\r\n\r\n  const { wind_speed: windSpeed, wind_deg: windDeg } = weatherObj.hourly[0]\r\n\r\n  const windContainer = document.createElement(\"div\")\r\n  const windTitle = document.createElement(\"div\")\r\n  const windValue = document.createElement(\"div\")\r\n\r\n  windTitle.textContent = \"WIND\"\r\n\r\n  const compassDirection = findCompassDirection(windDeg)\r\n\r\n  windValue.textContent = `${compassDirection} ${roundUp(handleCorrectMetric(windSpeed))} km/hr`\r\n\r\n  windTitle.classList.add(\"generalInfo-title\")\r\n  windValue.classList.add(\"generalInfo-value\")\r\n\r\n  windContainer.classList.add(\"generalInfo\")\r\n\r\n  windContainer.append(windTitle, windValue)\r\n\r\n  const { feels_like: feelsLike } = weatherObj.hourly[0]\r\n\r\n  const feelsLikeContainer = document.createElement(\"div\")\r\n  const feelsLikeTitle = document.createElement(\"div\")\r\n  const feelsLikeValue = document.createElement(\"div\")\r\n\r\n  feelsLikeTitle.textContent = \"FEELS LIKE\"\r\n  feelsLikeValue.textContent = `${roundUp(feelsLike)}°`\r\n\r\n  feelsLikeTitle.classList.add(\"generalInfo-title\")\r\n  feelsLikeValue.classList.add(\"generalInfo-value\")\r\n\r\n  feelsLikeContainer.classList.add(\"generalInfo\")\r\n\r\n  feelsLikeContainer.append(feelsLikeTitle, feelsLikeValue)\r\n\r\n  const { rain } = weatherObj.daily[0]\r\n\r\n  const precipitationContainer = document.createElement(\"div\")\r\n  const precipitationTitle = document.createElement(\"div\")\r\n  const precipitationValue = document.createElement(\"div\")\r\n\r\n  precipitationTitle.textContent = \"PRECIPITATION\"\r\n  precipitationValue.textContent = `${rain} mm/h`\r\n\r\n  if (rain === undefined) {\r\n    precipitationValue.textContent = 0\r\n  }\r\n\r\n  precipitationTitle.classList.add(\"generalInfo-title\")\r\n  precipitationValue.classList.add(\"generalInfo-value\")\r\n\r\n  precipitationContainer.classList.add(\"generalInfo\")\r\n\r\n  precipitationContainer.append(precipitationTitle, precipitationValue)\r\n\r\n  const { pressure } = weatherObj.hourly[0]\r\n\r\n  const pressureContainer = document.createElement(\"div\")\r\n  const pressureTitle = document.createElement(\"div\")\r\n  const pressureValue = document.createElement(\"div\")\r\n\r\n  pressureTitle.textContent = \"PRESSURE\"\r\n  pressureValue.textContent = `${pressure} hPa`\r\n\r\n  pressureTitle.classList.add(\"generalInfo-title\")\r\n  pressureValue.classList.add(\"generalInfo-value\")\r\n\r\n  pressureContainer.classList.add(\"generalInfo\")\r\n\r\n  pressureContainer.append(pressureTitle, pressureValue)\r\n\r\n  const { visibility } = weatherObj.hourly[0]\r\n\r\n  const visibilityContainer = document.createElement(\"div\")\r\n  const visibilityTitle = document.createElement(\"div\")\r\n  const visibilityValue = document.createElement(\"div\")\r\n\r\n  visibilityTitle.textContent = \"VISIBILITY\"\r\n  visibilityValue.textContent = `${convertMetersToKilometers(visibility)} km`\r\n\r\n  visibilityTitle.classList.add(\"generalInfo-title\")\r\n  visibilityValue.classList.add(\"generalInfo-value\")\r\n\r\n  visibilityContainer.classList.add(\"generalInfo\")\r\n\r\n  visibilityContainer.append(visibilityTitle, visibilityValue)\r\n\r\n  const { uvi } = weatherObj.hourly[0]\r\n\r\n  const uviIndexContainer = document.createElement(\"div\")\r\n  const uviIndexTitle = document.createElement(\"div\")\r\n  const uviIndexValue = document.createElement(\"div\")\r\n\r\n  uviIndexTitle.textContent = \"UVI INDEX\"\r\n  uviIndexValue.textContent = `${uvi}`\r\n\r\n  uviIndexTitle.classList.add(\"generalInfo-title\")\r\n  uviIndexValue.classList.add(\"generalInfo-value\")\r\n\r\n  uviIndexContainer.classList.add(\"generalInfo\")\r\n\r\n  uviIndexContainer.append(uviIndexTitle, uviIndexValue)\r\n\r\n  generalInfoContainer.append(\r\n    sunriseContainer,\r\n    sunsetContainer,\r\n    chanceOfRainContainer,\r\n    humidityContainer,\r\n    windContainer,\r\n    pressureContainer,\r\n    feelsLikeContainer,\r\n    precipitationContainer,\r\n    precipitationContainer,\r\n    visibilityContainer,\r\n    uviIndexContainer,\r\n  )\r\n\r\n  appendToContentWrapper(generalInfoContainer)\r\n}\r\n\r\n\r\n"],"names":["handleWeatherIcon","weatherImage","iconCode","iconDescription","src","setAttribute","toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","getHours","date","fromUnixTime","unixTime","convertPopToPercentage","unit","Math","floor","getDayFromUnixTimestamp","unix","day","getDay","getHoursAndMinutes","hours","minutes","getMinutes","length","roundUp","round","mediaQueryMin768","window","matchMedia","handleMediaQueryMin768","event","generalInfoContainer","document","querySelector","dailyForecastContainer","contentWrapper","matches","remove","insertBefore","appendChild","appendToMainDisplay","element","appendToContentWrapper","addEventListener","main","handleLoader","loader","classList","contains","add","async","handleCitySearch","city","content","clearContentWrapper","weatherContentWrapper","createElement","coordinatesObj","fetch","mode","then","res","ok","Error","status","statusText","json","lat","lon","name","catch","err","message","getCordinates","textContent","handleSearchError","selectedMetric","metricForApi","weatherObj","metric","console","log","error","getWeather","mainDisplay","createMainDisplay","cityCoordinates","mainInfo","cityName","current","weather","cityWeather","temp","cityTemp","min","max","daily","cityHighAndLowContainer","cityHigh","cityLow","append","createMainInfo","arr24Hours","hourly","slice","hourlyForecastContainer","i","hourlyForecast","hour","rainChance","Image","temperature","dt","pop","icon","description","createHourlyForecast","descriptionValue","descriptionParagraph","createDescription","dailyForecastArr","dailyForecast","weatherIcon","highAndLowContainer","high","low","createDailyForecast","sunrise","sunset","sunriseContainer","sunriseTitle","sunriseValue","sunsetContainer","sunsetTitle","sunsetValue","chanceOfRainContainer","chanceOfRainTitle","chanceOfRainValue","humidity","humidityContainer","humidityTitle","humidityValue","wind_speed","windSpeed","wind_deg","windDeg","windContainer","windTitle","windValue","compassDirection","deg","directionsArr","directionName","degrees","findCompassDirection","convertMetersPerSecondToKhH","convertMilesPerHourToKhH","feels_like","feelsLike","feelsLikeContainer","feelsLikeTitle","feelsLikeValue","rain","precipitationContainer","precipitationTitle","precipitationValue","undefined","pressure","pressureContainer","pressureTitle","pressureValue","visibility","visibilityContainer","visibilityTitle","visibilityValue","convertMetersToKilometers","uvi","uviIndexContainer","uviIndexTitle","uviIndexValue","createGeneralInfo","toggleMetricBtn","celsiusMetric","fahrenheitMetric","e","searchValue","value","preventDefault"],"sourceRoot":""}