{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://basetemplate/./src/apiFunctions.js","webpack://basetemplate/./node_modules/date-fns/toDate.mjs","webpack://basetemplate/./node_modules/date-fns/fromUnixTime.mjs","webpack://basetemplate/./node_modules/date-fns/getHours.mjs","webpack://basetemplate/./src/helperFunctions.js","webpack://basetemplate/./node_modules/date-fns/getDay.mjs","webpack://basetemplate/./node_modules/date-fns/getMinutes.mjs","webpack://basetemplate/./src/builderFunctions.js","webpack://basetemplate/./src/index.js"],"sourcesContent":["export function getCordinates(city) {\n    return fetch(\n      `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=2815b9b71f4c4387bd5d1f3c3f298af6`,\n      { mode: \"cors\" },\n    )\n      .then((res) => {\n        console.log(res)\n        if (res.ok === false) {\n          throw new Error(\n            `getCordinates fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n          )\n        }\n        return res.json()\n      })\n      .then((res) => {\n        console.log(res)\n        const { lat, lon, name } = res[0]\n        console.log(lat, lon)\n        return { name, lat, lon }\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n  \nexport function getWeather(lat, lon) {\n    return fetch(\n      `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=2815b9b71f4c4387bd5d1f3c3f298af6&units=metric`,\n      { mode: \"cors\" },\n    )\n      .then((res) => {\n        if (res.ok === false) {\n          throw new Error(\n            `getWeather fetch operation unsuccessful: ${res.status} ${res.statusText}`,\n          )\n        }\n        return res.json()\n      })\n      .then((res) => {\n        console.log(res)\n        return res\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\nexport function getWeatherIcon(iconCode) {\n    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`\n}","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport function getHours(date) {\n  const _date = toDate(date);\n  const hours = _date.getHours();\n  return hours;\n}\n\n// Fallback for modularized imports:\nexport default getHours;\n","import { fromUnixTime, getHours, getMinutes, getDay } from \"date-fns\"\n\nexport function convertPopToPercentage(unit) {\n    return Math.floor(unit * 100)\n}\n\nexport function convertMetersPerSecondToKhH(unit) {\n    return 3.6 * unit\n}\n  \nexport function convertMetersToKilometers(unit) {\n    return unit / 100\n}\n\nexport function getHourFromUnixTimestamp(unix) {\n    const date = fromUnixTime(unix)\n    const hour = getHours(date)\n  \n    return hour\n}\n\nexport function getDayFromUnixTimestamp(unix) {\n    const date = fromUnixTime(unix)\n    const day = getDay(date)\n  \n    if(day === 0) {\n      return \"Sunday\"\n    } \n  \n    if(day === 1) {\n      return \"Monday\"\n    }\n  \n    if(day === 2) {\n      return \"Tuesday\"\n    }\n    \n    if(day === 3) {\n      return \"Wednesday\"\n    }\n  \n    if(day === 4) {\n      return \"Thursday\"\n    }\n  \n    if(day === 5) {\n      return \"Friday\"\n    }\n  \n    if(day === 6) {\n      return \"Saturday\"\n    }\n}\n\nexport function getHoursAndMinutes(unit) {\n    let result1 = fromUnixTime(unit)\n    let hours = getHours(result1)\n    let minutes = getMinutes(result1)\n\n    if(minutes.toString(10).length === 1) {\n        minutes = `0${minutes}`\n    }\n\n    return `${hours} : ${minutes}`\n}\n\nexport function roundUp(unit) {\n    return Math.round(unit)\n}\n\nexport function findCompassDirection(deg) {\n    let directionsArr = [{directionName: \"N\", degrees: 0}, {directionName: \"NNE\", degrees: 22.5}, {directionName: \"NE\", degrees: 45}, {directionName: \"ENE\", degrees: 67.5}, {directionName: \"E\", degrees: 90}, {directionName: \"ESE\", degrees: 112.5}, {directionName: \"SE\", degrees: 135}, {directionName: \"SSE\", degrees: 157.5}, {directionName: \"S\", degrees: 180}, {directionName: \"SSW\", degrees: 202.5}, {directionName: \"SW\", degrees: 225}, {directionName: \"WSW\", degrees: 247.5}, {directionName: \"W\", degrees: 270}, {directionName: \"WNW\", degrees: 292.5}, {directionName: \"NW\", degrees: 315}, {directionName: \"NNW\", degrees: 337.5}, {directionName: \"N\", degrees: 360} ]\n  \n  \n    for(let i = 0; i < directionsArr.length; i += 1) {\n      if(directionsArr[i].degrees === deg) {\n        return directionsArr[i].directionName\n      } \n  \n      if(directionsArr[i].degrees > deg) {\n        let prevMinusDeg = deg - directionsArr[i - 1].degrees \n        let currMinusDeg = directionsArr[i].degrees - deg\n  \n        console.log(prevMinusDeg)\n        console.log(currMinusDeg)\n  \n        if(prevMinusDeg < currMinusDeg) {\n          return directionsArr[i - 1].directionName\n        } else {\n          return directionsArr[i].directionName\n        }\n      }\n    }\n  }\n  \n\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date) {\n  const _date = toDate(date);\n  const day = _date.getDay();\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nexport function getMinutes(date) {\n  const _date = toDate(date);\n  const minutes = _date.getMinutes();\n  return minutes;\n}\n\n// Fallback for modularized imports:\nexport default getMinutes;\n","import { getWeatherIcon } from \"./apiFunctions\"\nimport { roundUp, convertMetersPerSecondToKhH, convertMetersToKilometers, convertPopToPercentage, getDayFromUnixTimestamp, getHourFromUnixTimestamp, getHoursAndMinutes, findCompassDirection } from \"./helperFunctions\"\n\nconst body = document.querySelector(\"body\")\n\nexport function createHourlyForecast(arr) {\n    const hourlyForecastContainer = document.createElement(\"div\")\n  \n    for (let i = 0; i < arr.length; i += 1) {\n      const hourlyForecast = document.createElement(\"div\")\n      const hour = document.createElement(\"div\")\n      const rainChance = document.createElement(\"div\")\n      const weatherImage = new Image()\n      const temperature = document.createElement(\"div\")\n  \n      hourlyForecastContainer.classList.add(\"hourlyForecastContainer\")\n  \n      hourlyForecast.classList.add(\"hourlyForecast\")\n      hour.classList.add(\"hourlyForecast-hour\")\n      rainChance.classList.add(\"hourlyForecast-rainChance\")\n      weatherImage.classList.add(\"hourlyForecast-weatherImage\")\n      temperature.classList.add(\"hourlyForecast-temperature\")\n  \n      if (i === 0) {\n        hour.textContent = \"Now\"\n      } else {\n        hour.textContent = `${getHourFromUnixTimestamp(arr[i].dt)}`\n      }\n  \n      if (arr[i].pop !== 0) {\n        rainChance.textContent = `${convertPopToPercentage(arr[i].pop)}%`\n      }\n  \n      weatherImage.src = getWeatherIcon(arr[i].weather[0].icon)\n  \n      temperature.textContent = `${roundUp(arr[i].temp)}°`\n  \n      hourlyForecast.appendChild(hour)\n      hourlyForecast.appendChild(rainChance)\n      hourlyForecast.appendChild(weatherImage)\n      hourlyForecast.appendChild(temperature)\n  \n      hourlyForecastContainer.appendChild(hourlyForecast)\n  \n      const body = document.querySelector(\"body\")\n  \n      body.appendChild(hourlyForecastContainer)\n    }\n}\n\nexport function createDescription(obj) {\n    const { max , min } = obj.temp\n    const descriptionValue = obj.weather[0].description\n  \n    const description = document.createElement(\"div\")\n    const descriptionParagraph = document.createElement(\"p\")\n  \n    description.classList.add(\"todaysDescription\")\n    descriptionParagraph.classList.add(\"todaysDescription-paragraph\")\n  \n    descriptionParagraph.textContent = `Today: ${descriptionValue}. The high will be ${roundUp(max)}°. The low will be ${roundUp(min)}°.`\n  \n    description.appendChild(descriptionParagraph)\n    const body = document.querySelector(\"body\");\n    body.appendChild(description)\n}\n\nexport function createDailyForecast(arr) {\n    const dailyForecastContainer = document.createElement(\"div\")\n  \n    dailyForecastContainer.classList.add(\"dailyForecastContainer\")\n  \n    for(let i = 1; i < arr.length; i += 1) {\n      const dailyForecast = document.createElement(\"div\")\n  \n      const day = document.createElement(\"div\")\n      const weatherIcon = new Image()\n      const highAndLowContainer = document.createElement(\"div\")\n      const high = document.createElement(\"span\")\n      const low = document.createElement(\"span\")\n      \n      dailyForecast.classList.add(\"dailyForecast\")\n  \n      day.classList.add(\"dailyForecast-day\")\n      weatherIcon.classList.add(\"dailyForecast-weatherImage\")\n      highAndLowContainer.classList.add(\"dailyForecast-highAndLowContainer\")\n      high.classList.add(\"dailyForecast-highAndLowContainer-high\")\n      low.classList.add(\"dailyForecast-highAndLowContainer-low\")\n  \n      day.textContent = `${getDayFromUnixTimestamp(arr[i].dt)}`\n      weatherIcon.src = getWeatherIcon(arr[i].weather[0].icon)\n      high.textContent = `${roundUp(arr[i].temp.max)}°`\n      low.textContent = `${roundUp(arr[i].temp.min)}°`\n  \n      highAndLowContainer.appendChild(high)\n      highAndLowContainer.appendChild(low)\n  \n      dailyForecast.appendChild(day)\n      dailyForecast.appendChild(weatherIcon)\n      dailyForecast.appendChild(highAndLowContainer)\n  \n      dailyForecastContainer.appendChild(dailyForecast)\n    }\n  \n    const body = document.querySelector(\"body\")\n  \n    body.appendChild(dailyForecastContainer)\n}\n\n\n\nexport function createGeneralInfo(obj) {\n    const generalInformation = document.createElement(\"div\")\n  \n    generalInformation.classList.add(\"generalInformation\")\n  \n    const { sunrise, sunset } = obj.daily[0]\n  \n    const sunriseContainer = document.createElement(\"div\")\n    const sunriseTitle = document.createElement(\"div\")\n    const sunriseValue = document.createElement(\"div\")\n  \n    sunriseTitle.textContent = \"SUNRISE\"\n    sunriseValue.textContent = `${getHoursAndMinutes(sunrise)}`\n  \n    const sunsetContainer = document.createElement(\"div\")\n    const sunsetTitle = document.createElement(\"div\")\n    const sunsetValue = document.createElement(\"div\")\n  \n    sunsetTitle.textContent = \"SUNSET\"\n    sunsetValue.textContent = `${getHoursAndMinutes(sunset)}`\n  \n    sunriseTitle.classList.add(\"generalInformation-container-title\")\n    sunriseValue.classList.add(\"generalInformation-container-value\")\n  \n    sunsetTitle.classList.add(\"generalInformation-container-title\")\n    sunsetValue.classList.add(\"generalInformation-container-value\")\n  \n    sunriseContainer.classList.add(\"generalInformation-container\")\n    sunsetContainer.classList.add(\"generalInformation-container\")\n  \n    sunriseContainer.append(sunriseTitle, sunriseValue)\n    sunsetContainer.append(sunsetTitle, sunsetValue)\n  \n    const { pop } = obj.hourly[0]\n  \n    const chanceOfRainContainer = document.createElement(\"div\")\n    const chanceOfRainTitle = document.createElement(\"div\")\n    const chanceOfRainValue = document.createElement(\"div\")\n  \n    chanceOfRainTitle.textContent = \"CHANCE OF RAIN\"\n    chanceOfRainValue.textContent = `${convertPopToPercentage(pop)}%`\n  \n    chanceOfRainTitle.classList.add(\"generalInformation-container-title\")\n    chanceOfRainValue.classList.add(\"generalInformation-container-value\")\n  \n    chanceOfRainContainer.classList.add(\"generalInformation-container\")\n  \n    chanceOfRainContainer.append(chanceOfRainTitle, chanceOfRainValue)\n  \n    const { humidity } = obj.hourly[0]\n  \n    const humidityContainer = document.createElement(\"div\")\n    const humidityTitle = document.createElement(\"div\")\n    const humidityValue = document.createElement(\"div\")\n  \n    humidityTitle.textContent = \"HUMIDITY\"\n    humidityValue.textContent = `${humidity}%`\n  \n    humidityTitle.classList.add(\"generalInformation-container-title\")\n    humidityValue.classList.add(\"generalInformation-container-value\")\n  \n    humidityContainer.classList.add(\"generalInformation-container\")\n  \n    humidityContainer.append(humidityTitle, humidityValue)\n  \n    const { wind_speed, wind_deg } = obj.hourly[0]\n  \n    const windContainer = document.createElement(\"div\")\n    const windTitle = document.createElement(\"div\")\n    const windValue = document.createElement(\"div\")\n  \n    windTitle.textContent = \"WIND\"\n    windValue.textContent = `${findCompassDirection(wind_deg)} ${roundUp(convertMetersPerSecondToKhH(wind_speed))} km/hr`\n  \n    windTitle.classList.add(\"generalInformation-container-title\")\n    windValue.classList.add(\"generalInformation-container-value\")\n  \n    windContainer.classList.add(\"generalInformation-container\")\n  \n    windContainer.append(windTitle, windValue)\n  \n    const { feels_like } = obj.hourly[0]\n  \n    const feelsLikeContainer = document.createElement(\"div\")\n    const feelsLikeTitle = document.createElement(\"div\")\n    const feelsLikeValue = document.createElement(\"div\")\n  \n    feelsLikeTitle.textContent = \"FEELS LIKE\"\n    feelsLikeValue.textContent = `${feels_like}°`\n  \n    feelsLikeTitle.classList.add(\"generalInformation-container-title\")\n    feelsLikeValue.classList.add(\"generalInformation-container-value\")\n  \n    feelsLikeContainer.classList.add(\"generalInformation-container\")\n  \n    feelsLikeContainer.append(feelsLikeTitle, feelsLikeValue)\n  \n    const { rain } = obj.daily[0]\n  \n    const precipitationContainer = document.createElement(\"div\")\n    const precipitationTitle = document.createElement(\"div\")\n    const precipitationValue = document.createElement(\"div\")\n  \n    precipitationTitle.textContent = \"PRECIPITATION\"\n    precipitationValue.textContent = `${rain} mm/h`\n  \n    if(rain === undefined) {\n      precipitationValue.textContent = 0;\n    }\n  \n    precipitationTitle.classList.add(\"generalInformation-container-title\")\n    precipitationValue.classList.add(\"generalInformation-container-value\")\n  \n    precipitationContainer.classList.add(\"generalInformation-container\")\n  \n    precipitationContainer.append(precipitationTitle, precipitationValue)\n  \n    const { pressure } = obj.hourly[0]\n  \n    const pressureContainer = document.createElement(\"div\")\n    const pressureTitle = document.createElement(\"div\")\n    const pressureValue = document.createElement(\"div\")\n  \n    pressureTitle.textContent = \"PRESSURE\"\n    pressureValue.textContent = `${pressure} hPa`\n  \n    pressureTitle.classList.add(\"generalInformation-container-title\")\n    pressureValue.classList.add(\"generalInformation-container-value\")\n  \n    pressureContainer.classList.add(\"generalInformation-container\")\n  \n    pressureContainer.append(pressureTitle, pressureValue)\n  \n    const { visibility } = obj.hourly[0]\n  \n    const visibilityContainer = document.createElement(\"div\")\n    const visibilityTitle = document.createElement(\"div\")\n    const visibilityValue = document.createElement(\"div\")\n  \n    visibilityTitle.textContent = \"VISIBILITY\"\n    visibilityValue.textContent = `${convertMetersToKilometers(visibility)} km`\n  \n    visibilityTitle.classList.add(\"generalInformation-container-title\")\n    visibilityValue.classList.add(\"generalInformation-container-value\")\n  \n    visibilityContainer.classList.add(\"generalInformation-container\")\n  \n    visibilityContainer.append(visibilityTitle, visibilityValue)\n  \n    const { uvi } = obj.hourly[0]\n  \n    const uviIndexContainer = document.createElement(\"div\")\n    const uviIndexTitle = document.createElement(\"div\")\n    const uviIndexValue = document.createElement(\"div\")\n  \n    uviIndexTitle.textContent = \"UVI INDEX\" \n    uviIndexValue.textContent = `${uvi}`\n  \n    uviIndexTitle.classList.add(\"generalInformation-container-title\")\n    uviIndexValue.classList.add(\"generalInformation-container-value\")\n  \n    uviIndexContainer.classList.add(\"generalInformation-container\")\n  \n    uviIndexContainer.append(uviIndexTitle, uviIndexValue)\n  \n    generalInformation.append(sunriseContainer, sunsetContainer, chanceOfRainContainer, humidityContainer, windContainer, feelsLikeContainer, precipitationContainer, precipitationContainer, visibilityContainer, uviIndexContainer)\n  \n    body.appendChild(generalInformation)\n  }","import { getCordinates, getWeather } from \"./apiFunctions\"\nimport { createHourlyForecast, createDescription, createDailyForecast, createGeneralInfo } from \"./builderFunctions\"\nimport { roundUp } from \"./helperFunctions\"\n\nconst body = document.querySelector(\"body\")\n\nfunction clearHourlyForecastContainer() {\n  document.querySelector(\".hourlyForecastContainer\").remove()\n}\n\nasync function handleCitySearch(city) {\n  const result = await getCordinates(city)\n\n  const { name: cityName, lat, lon } = result\n\n  const weather = await getWeather(lat, lon)\n\n  const cityDisplay = document.querySelector(\".city\")\n  cityDisplay.textContent = cityName\n\n  const { main } = weather.current.weather[0]\n\n  const cityWeather = document.querySelector(\".city-weather\")\n  cityWeather.textContent = main\n\n  const { temp } = weather.current\n\n  const cityTemp = document.querySelector(\".city-temperature\")\n  cityTemp.textContent = `${roundUp(temp)}°`\n\n  const { min, max } = weather.daily[0].temp\n\n  const cityHigh = document.querySelector(\".city-high\")\n  const cityLow = document.querySelector(\".city-low\")\n\n  cityHigh.textContent = `H:${roundUp(max)}°`\n  cityLow.textContent = `L:${roundUp(min)}°`\n\n  const hourlyForecast24Arr = weather.hourly.slice(0, 24)\n\n  if (document.querySelector(\".hourlyForecastContainer\") !== null) {\n    clearHourlyForecastContainer()\n    createHourlyForecast(hourlyForecast24Arr)\n  } else {\n    createHourlyForecast(hourlyForecast24Arr)\n  }\n\n  createDescription(weather.daily[0])\n  createDailyForecast(weather.daily)\n  createGeneralInfo(weather)\n}\n\nconst searchBtn = document.querySelector(\".search-btn\")\n\nsearchBtn.addEventListener(\"click\", (e) => {\n  const searchValue = document.querySelector(\".search-input\").value\n  const searchInput = document.querySelector(\".search-input\")\n  searchInput.value = \"\"\n\n  handleCitySearch(searchValue)\n  e.preventDefault()\n})\n\n\n\n"],"names":["getWeatherIcon","iconCode","toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","fromUnixTime","unixTime","getHours","date","convertPopToPercentage","unit","Math","floor","getDayFromUnixTimestamp","unix","day","getDay","getHoursAndMinutes","result1","hours","minutes","getMinutes","length","roundUp","round","body","document","querySelector","createHourlyForecast","arr","hourlyForecastContainer","createElement","i","hourlyForecast","hour","rainChance","weatherImage","Image","temperature","classList","add","textContent","dt","pop","src","weather","icon","temp","appendChild","async","handleCitySearch","city","result","fetch","mode","then","res","console","log","ok","Error","status","statusText","json","lat","lon","name","catch","err","error","getCordinates","cityName","getWeather","main","current","min","max","daily","cityHigh","cityLow","hourlyForecast24Arr","hourly","slice","remove","obj","descriptionValue","description","descriptionParagraph","createDescription","dailyForecastContainer","dailyForecast","weatherIcon","highAndLowContainer","high","low","createDailyForecast","generalInformation","sunrise","sunset","sunriseContainer","sunriseTitle","sunriseValue","sunsetContainer","sunsetTitle","sunsetValue","append","chanceOfRainContainer","chanceOfRainTitle","chanceOfRainValue","humidity","humidityContainer","humidityTitle","humidityValue","wind_speed","wind_deg","windContainer","windTitle","windValue","deg","directionsArr","directionName","degrees","prevMinusDeg","currMinusDeg","findCompassDirection","feels_like","feelsLikeContainer","feelsLikeTitle","feelsLikeValue","rain","precipitationContainer","precipitationTitle","precipitationValue","undefined","pressure","pressureContainer","pressureTitle","pressureValue","visibility","visibilityContainer","visibilityTitle","visibilityValue","convertMetersToKilometers","uvi","uviIndexContainer","uviIndexTitle","uviIndexValue","createGeneralInfo","addEventListener","e","searchValue","value","preventDefault"],"sourceRoot":""}